Grammar

    0 $accept: start $end

    1 start: BEG Slist END ';'
    2      | BEG END ';'

    3 Slist: Slist Stmt
    4      | Stmt

    5 Stmt: InputStmt
    6     | OutputStmt
    7     | AsgStmt
    8     | Ifstmt
    9     | Whilestmt
   10     | Breakstmt
   11     | Contstmt

   12 Breakstmt: BREAK ';'

   13 Contstmt: CONTINUE ';'

   14 InputStmt: READ '(' ID ')' ';'

   15 OutputStmt: WRITE '(' E ')' ';'

   16 AsgStmt: ID EQ E ';'

   17 Ifstmt: IF '(' E ')' THEN Slist ELSE Slist ENDIF ';'
   18       | IF '(' E ')' THEN Slist ENDIF ';'

   19 Whilestmt: WHILE '(' E ')' DO Slist ENDWHILE ';'

   20 E: E PLUS E
   21  | E MINUS E
   22  | E MUL E
   23  | E DIV E
   24  | '(' E ')'
   25  | ID
   26  | NUM
   27  | E LT E
   28  | E GT E
   29  | E LE E
   30  | E GE E
   31  | E NE E
   32  | E EE E


Terminals, with rules where they appear

$end (0) 0
'(' (40) 14 15 17 18 19 24
')' (41) 14 15 17 18 19 24
';' (59) 1 2 12 13 14 15 16 17 18 19
error (256)
NUM (258) 26
ID (259) 14 16 25
PLUS (260) 20
MINUS (261) 21
MUL (262) 22
DIV (263) 23
EQ (264) 16
LT (265) 27
GT (266) 28
LE (267) 29
GE (268) 30
NE (269) 31
EE (270) 32
BEG (271) 1 2
END (272) 1 2
READ (273) 14
WRITE (274) 15
IF (275) 17 18
THEN (276) 17 18
ELSE (277) 17
ENDIF (278) 17 18
WHILE (279) 19
DO (280) 19
ENDWHILE (281) 19
BREAK (282) 12
CONTINUE (283) 13


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
start (33)
    on left: 1 2, on right: 0
Slist (34)
    on left: 3 4, on right: 1 3 17 18 19
Stmt (35)
    on left: 5 6 7 8 9 10 11, on right: 3 4
Breakstmt (36)
    on left: 12, on right: 10
Contstmt (37)
    on left: 13, on right: 11
InputStmt (38)
    on left: 14, on right: 5
OutputStmt (39)
    on left: 15, on right: 6
AsgStmt (40)
    on left: 16, on right: 7
Ifstmt (41)
    on left: 17 18, on right: 8
Whilestmt (42)
    on left: 19, on right: 9
E (43)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31 32, on right: 15 16
    17 18 19 20 21 22 23 24 27 28 29 30 31 32


State 0

    0 $accept: . start $end

    BEG  shift, and go to state 1

    start  go to state 2


State 1

    1 start: BEG . Slist END ';'
    2      | BEG . END ';'

    ID        shift, and go to state 3
    END       shift, and go to state 4
    READ      shift, and go to state 5
    WRITE     shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    BREAK     shift, and go to state 9
    CONTINUE  shift, and go to state 10

    Slist       go to state 11
    Stmt        go to state 12
    Breakstmt   go to state 13
    Contstmt    go to state 14
    InputStmt   go to state 15
    OutputStmt  go to state 16
    AsgStmt     go to state 17
    Ifstmt      go to state 18
    Whilestmt   go to state 19


State 2

    0 $accept: start . $end

    $end  shift, and go to state 20


State 3

   16 AsgStmt: ID . EQ E ';'

    EQ  shift, and go to state 21


State 4

    2 start: BEG END . ';'

    ';'  shift, and go to state 22


State 5

   14 InputStmt: READ . '(' ID ')' ';'

    '('  shift, and go to state 23


State 6

   15 OutputStmt: WRITE . '(' E ')' ';'

    '('  shift, and go to state 24


State 7

   17 Ifstmt: IF . '(' E ')' THEN Slist ELSE Slist ENDIF ';'
   18       | IF . '(' E ')' THEN Slist ENDIF ';'

    '('  shift, and go to state 25


State 8

   19 Whilestmt: WHILE . '(' E ')' DO Slist ENDWHILE ';'

    '('  shift, and go to state 26


State 9

   12 Breakstmt: BREAK . ';'

    ';'  shift, and go to state 27


State 10

   13 Contstmt: CONTINUE . ';'

    ';'  shift, and go to state 28


State 11

    1 start: BEG Slist . END ';'
    3 Slist: Slist . Stmt

    ID        shift, and go to state 3
    END       shift, and go to state 29
    READ      shift, and go to state 5
    WRITE     shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    BREAK     shift, and go to state 9
    CONTINUE  shift, and go to state 10

    Stmt        go to state 30
    Breakstmt   go to state 13
    Contstmt    go to state 14
    InputStmt   go to state 15
    OutputStmt  go to state 16
    AsgStmt     go to state 17
    Ifstmt      go to state 18
    Whilestmt   go to state 19


State 12

    4 Slist: Stmt .

    $default  reduce using rule 4 (Slist)


State 13

   10 Stmt: Breakstmt .

    $default  reduce using rule 10 (Stmt)


State 14

   11 Stmt: Contstmt .

    $default  reduce using rule 11 (Stmt)


State 15

    5 Stmt: InputStmt .

    $default  reduce using rule 5 (Stmt)


State 16

    6 Stmt: OutputStmt .

    $default  reduce using rule 6 (Stmt)


State 17

    7 Stmt: AsgStmt .

    $default  reduce using rule 7 (Stmt)


State 18

    8 Stmt: Ifstmt .

    $default  reduce using rule 8 (Stmt)


State 19

    9 Stmt: Whilestmt .

    $default  reduce using rule 9 (Stmt)


State 20

    0 $accept: start $end .

    $default  accept


State 21

   16 AsgStmt: ID EQ . E ';'

    NUM  shift, and go to state 31
    ID   shift, and go to state 32
    '('  shift, and go to state 33

    E  go to state 34


State 22

    2 start: BEG END ';' .

    $default  reduce using rule 2 (start)


State 23

   14 InputStmt: READ '(' . ID ')' ';'

    ID  shift, and go to state 35


State 24

   15 OutputStmt: WRITE '(' . E ')' ';'

    NUM  shift, and go to state 31
    ID   shift, and go to state 32
    '('  shift, and go to state 33

    E  go to state 36


State 25

   17 Ifstmt: IF '(' . E ')' THEN Slist ELSE Slist ENDIF ';'
   18       | IF '(' . E ')' THEN Slist ENDIF ';'

    NUM  shift, and go to state 31
    ID   shift, and go to state 32
    '('  shift, and go to state 33

    E  go to state 37


State 26

   19 Whilestmt: WHILE '(' . E ')' DO Slist ENDWHILE ';'

    NUM  shift, and go to state 31
    ID   shift, and go to state 32
    '('  shift, and go to state 33

    E  go to state 38


State 27

   12 Breakstmt: BREAK ';' .

    $default  reduce using rule 12 (Breakstmt)


State 28

   13 Contstmt: CONTINUE ';' .

    $default  reduce using rule 13 (Contstmt)


State 29

    1 start: BEG Slist END . ';'

    ';'  shift, and go to state 39


State 30

    3 Slist: Slist Stmt .

    $default  reduce using rule 3 (Slist)


State 31

   26 E: NUM .

    $default  reduce using rule 26 (E)


State 32

   25 E: ID .

    $default  reduce using rule 25 (E)


State 33

   24 E: '(' . E ')'

    NUM  shift, and go to state 31
    ID   shift, and go to state 32
    '('  shift, and go to state 33

    E  go to state 40


State 34

   16 AsgStmt: ID EQ E . ';'
   20 E: E . PLUS E
   21  | E . MINUS E
   22  | E . MUL E
   23  | E . DIV E
   27  | E . LT E
   28  | E . GT E
   29  | E . LE E
   30  | E . GE E
   31  | E . NE E
   32  | E . EE E

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42
    MUL    shift, and go to state 43
    DIV    shift, and go to state 44
    LT     shift, and go to state 45
    GT     shift, and go to state 46
    LE     shift, and go to state 47
    GE     shift, and go to state 48
    NE     shift, and go to state 49
    EE     shift, and go to state 50
    ';'    shift, and go to state 51


State 35

   14 InputStmt: READ '(' ID . ')' ';'

    ')'  shift, and go to state 52


State 36

   15 OutputStmt: WRITE '(' E . ')' ';'
   20 E: E . PLUS E
   21  | E . MINUS E
   22  | E . MUL E
   23  | E . DIV E
   27  | E . LT E
   28  | E . GT E
   29  | E . LE E
   30  | E . GE E
   31  | E . NE E
   32  | E . EE E

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42
    MUL    shift, and go to state 43
    DIV    shift, and go to state 44
    LT     shift, and go to state 45
    GT     shift, and go to state 46
    LE     shift, and go to state 47
    GE     shift, and go to state 48
    NE     shift, and go to state 49
    EE     shift, and go to state 50
    ')'    shift, and go to state 53


State 37

   17 Ifstmt: IF '(' E . ')' THEN Slist ELSE Slist ENDIF ';'
   18       | IF '(' E . ')' THEN Slist ENDIF ';'
   20 E: E . PLUS E
   21  | E . MINUS E
   22  | E . MUL E
   23  | E . DIV E
   27  | E . LT E
   28  | E . GT E
   29  | E . LE E
   30  | E . GE E
   31  | E . NE E
   32  | E . EE E

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42
    MUL    shift, and go to state 43
    DIV    shift, and go to state 44
    LT     shift, and go to state 45
    GT     shift, and go to state 46
    LE     shift, and go to state 47
    GE     shift, and go to state 48
    NE     shift, and go to state 49
    EE     shift, and go to state 50
    ')'    shift, and go to state 54


State 38

   19 Whilestmt: WHILE '(' E . ')' DO Slist ENDWHILE ';'
   20 E: E . PLUS E
   21  | E . MINUS E
   22  | E . MUL E
   23  | E . DIV E
   27  | E . LT E
   28  | E . GT E
   29  | E . LE E
   30  | E . GE E
   31  | E . NE E
   32  | E . EE E

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42
    MUL    shift, and go to state 43
    DIV    shift, and go to state 44
    LT     shift, and go to state 45
    GT     shift, and go to state 46
    LE     shift, and go to state 47
    GE     shift, and go to state 48
    NE     shift, and go to state 49
    EE     shift, and go to state 50
    ')'    shift, and go to state 55


State 39

    1 start: BEG Slist END ';' .

    $default  reduce using rule 1 (start)


State 40

   20 E: E . PLUS E
   21  | E . MINUS E
   22  | E . MUL E
   23  | E . DIV E
   24  | '(' E . ')'
   27  | E . LT E
   28  | E . GT E
   29  | E . LE E
   30  | E . GE E
   31  | E . NE E
   32  | E . EE E

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42
    MUL    shift, and go to state 43
    DIV    shift, and go to state 44
    LT     shift, and go to state 45
    GT     shift, and go to state 46
    LE     shift, and go to state 47
    GE     shift, and go to state 48
    NE     shift, and go to state 49
    EE     shift, and go to state 50
    ')'    shift, and go to state 56


State 41

   20 E: E PLUS . E

    NUM  shift, and go to state 31
    ID   shift, and go to state 32
    '('  shift, and go to state 33

    E  go to state 57


State 42

   21 E: E MINUS . E

    NUM  shift, and go to state 31
    ID   shift, and go to state 32
    '('  shift, and go to state 33

    E  go to state 58


State 43

   22 E: E MUL . E

    NUM  shift, and go to state 31
    ID   shift, and go to state 32
    '('  shift, and go to state 33

    E  go to state 59


State 44

   23 E: E DIV . E

    NUM  shift, and go to state 31
    ID   shift, and go to state 32
    '('  shift, and go to state 33

    E  go to state 60


State 45

   27 E: E LT . E

    NUM  shift, and go to state 31
    ID   shift, and go to state 32
    '('  shift, and go to state 33

    E  go to state 61


State 46

   28 E: E GT . E

    NUM  shift, and go to state 31
    ID   shift, and go to state 32
    '('  shift, and go to state 33

    E  go to state 62


State 47

   29 E: E LE . E

    NUM  shift, and go to state 31
    ID   shift, and go to state 32
    '('  shift, and go to state 33

    E  go to state 63


State 48

   30 E: E GE . E

    NUM  shift, and go to state 31
    ID   shift, and go to state 32
    '('  shift, and go to state 33

    E  go to state 64


State 49

   31 E: E NE . E

    NUM  shift, and go to state 31
    ID   shift, and go to state 32
    '('  shift, and go to state 33

    E  go to state 65


State 50

   32 E: E EE . E

    NUM  shift, and go to state 31
    ID   shift, and go to state 32
    '('  shift, and go to state 33

    E  go to state 66


State 51

   16 AsgStmt: ID EQ E ';' .

    $default  reduce using rule 16 (AsgStmt)


State 52

   14 InputStmt: READ '(' ID ')' . ';'

    ';'  shift, and go to state 67


State 53

   15 OutputStmt: WRITE '(' E ')' . ';'

    ';'  shift, and go to state 68


State 54

   17 Ifstmt: IF '(' E ')' . THEN Slist ELSE Slist ENDIF ';'
   18       | IF '(' E ')' . THEN Slist ENDIF ';'

    THEN  shift, and go to state 69


State 55

   19 Whilestmt: WHILE '(' E ')' . DO Slist ENDWHILE ';'

    DO  shift, and go to state 70


State 56

   24 E: '(' E ')' .

    $default  reduce using rule 24 (E)


State 57

   20 E: E . PLUS E
   20  | E PLUS E .
   21  | E . MINUS E
   22  | E . MUL E
   23  | E . DIV E
   27  | E . LT E
   28  | E . GT E
   29  | E . LE E
   30  | E . GE E
   31  | E . NE E
   32  | E . EE E

    MUL  shift, and go to state 43
    DIV  shift, and go to state 44

    $default  reduce using rule 20 (E)


State 58

   20 E: E . PLUS E
   21  | E . MINUS E
   21  | E MINUS E .
   22  | E . MUL E
   23  | E . DIV E
   27  | E . LT E
   28  | E . GT E
   29  | E . LE E
   30  | E . GE E
   31  | E . NE E
   32  | E . EE E

    MUL  shift, and go to state 43
    DIV  shift, and go to state 44

    $default  reduce using rule 21 (E)


State 59

   20 E: E . PLUS E
   21  | E . MINUS E
   22  | E . MUL E
   22  | E MUL E .
   23  | E . DIV E
   27  | E . LT E
   28  | E . GT E
   29  | E . LE E
   30  | E . GE E
   31  | E . NE E
   32  | E . EE E

    $default  reduce using rule 22 (E)


State 60

   20 E: E . PLUS E
   21  | E . MINUS E
   22  | E . MUL E
   23  | E . DIV E
   23  | E DIV E .
   27  | E . LT E
   28  | E . GT E
   29  | E . LE E
   30  | E . GE E
   31  | E . NE E
   32  | E . EE E

    $default  reduce using rule 23 (E)


State 61

   20 E: E . PLUS E
   21  | E . MINUS E
   22  | E . MUL E
   23  | E . DIV E
   27  | E . LT E
   27  | E LT E .
   28  | E . GT E
   29  | E . LE E
   30  | E . GE E
   31  | E . NE E
   32  | E . EE E

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42
    MUL    shift, and go to state 43
    DIV    shift, and go to state 44

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EE  error (nonassociative)

    $default  reduce using rule 27 (E)


State 62

   20 E: E . PLUS E
   21  | E . MINUS E
   22  | E . MUL E
   23  | E . DIV E
   27  | E . LT E
   28  | E . GT E
   28  | E GT E .
   29  | E . LE E
   30  | E . GE E
   31  | E . NE E
   32  | E . EE E

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42
    MUL    shift, and go to state 43
    DIV    shift, and go to state 44

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EE  error (nonassociative)

    $default  reduce using rule 28 (E)


State 63

   20 E: E . PLUS E
   21  | E . MINUS E
   22  | E . MUL E
   23  | E . DIV E
   27  | E . LT E
   28  | E . GT E
   29  | E . LE E
   29  | E LE E .
   30  | E . GE E
   31  | E . NE E
   32  | E . EE E

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42
    MUL    shift, and go to state 43
    DIV    shift, and go to state 44

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EE  error (nonassociative)

    $default  reduce using rule 29 (E)


State 64

   20 E: E . PLUS E
   21  | E . MINUS E
   22  | E . MUL E
   23  | E . DIV E
   27  | E . LT E
   28  | E . GT E
   29  | E . LE E
   30  | E . GE E
   30  | E GE E .
   31  | E . NE E
   32  | E . EE E

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42
    MUL    shift, and go to state 43
    DIV    shift, and go to state 44

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EE  error (nonassociative)

    $default  reduce using rule 30 (E)


State 65

   20 E: E . PLUS E
   21  | E . MINUS E
   22  | E . MUL E
   23  | E . DIV E
   27  | E . LT E
   28  | E . GT E
   29  | E . LE E
   30  | E . GE E
   31  | E . NE E
   31  | E NE E .
   32  | E . EE E

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42
    MUL    shift, and go to state 43
    DIV    shift, and go to state 44

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EE  error (nonassociative)

    $default  reduce using rule 31 (E)


State 66

   20 E: E . PLUS E
   21  | E . MINUS E
   22  | E . MUL E
   23  | E . DIV E
   27  | E . LT E
   28  | E . GT E
   29  | E . LE E
   30  | E . GE E
   31  | E . NE E
   32  | E . EE E
   32  | E EE E .

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42
    MUL    shift, and go to state 43
    DIV    shift, and go to state 44

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EE  error (nonassociative)

    $default  reduce using rule 32 (E)


State 67

   14 InputStmt: READ '(' ID ')' ';' .

    $default  reduce using rule 14 (InputStmt)


State 68

   15 OutputStmt: WRITE '(' E ')' ';' .

    $default  reduce using rule 15 (OutputStmt)


State 69

   17 Ifstmt: IF '(' E ')' THEN . Slist ELSE Slist ENDIF ';'
   18       | IF '(' E ')' THEN . Slist ENDIF ';'

    ID        shift, and go to state 3
    READ      shift, and go to state 5
    WRITE     shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    BREAK     shift, and go to state 9
    CONTINUE  shift, and go to state 10

    Slist       go to state 71
    Stmt        go to state 12
    Breakstmt   go to state 13
    Contstmt    go to state 14
    InputStmt   go to state 15
    OutputStmt  go to state 16
    AsgStmt     go to state 17
    Ifstmt      go to state 18
    Whilestmt   go to state 19


State 70

   19 Whilestmt: WHILE '(' E ')' DO . Slist ENDWHILE ';'

    ID        shift, and go to state 3
    READ      shift, and go to state 5
    WRITE     shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    BREAK     shift, and go to state 9
    CONTINUE  shift, and go to state 10

    Slist       go to state 72
    Stmt        go to state 12
    Breakstmt   go to state 13
    Contstmt    go to state 14
    InputStmt   go to state 15
    OutputStmt  go to state 16
    AsgStmt     go to state 17
    Ifstmt      go to state 18
    Whilestmt   go to state 19


State 71

    3 Slist: Slist . Stmt
   17 Ifstmt: IF '(' E ')' THEN Slist . ELSE Slist ENDIF ';'
   18       | IF '(' E ')' THEN Slist . ENDIF ';'

    ID        shift, and go to state 3
    READ      shift, and go to state 5
    WRITE     shift, and go to state 6
    IF        shift, and go to state 7
    ELSE      shift, and go to state 73
    ENDIF     shift, and go to state 74
    WHILE     shift, and go to state 8
    BREAK     shift, and go to state 9
    CONTINUE  shift, and go to state 10

    Stmt        go to state 30
    Breakstmt   go to state 13
    Contstmt    go to state 14
    InputStmt   go to state 15
    OutputStmt  go to state 16
    AsgStmt     go to state 17
    Ifstmt      go to state 18
    Whilestmt   go to state 19


State 72

    3 Slist: Slist . Stmt
   19 Whilestmt: WHILE '(' E ')' DO Slist . ENDWHILE ';'

    ID        shift, and go to state 3
    READ      shift, and go to state 5
    WRITE     shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    ENDWHILE  shift, and go to state 75
    BREAK     shift, and go to state 9
    CONTINUE  shift, and go to state 10

    Stmt        go to state 30
    Breakstmt   go to state 13
    Contstmt    go to state 14
    InputStmt   go to state 15
    OutputStmt  go to state 16
    AsgStmt     go to state 17
    Ifstmt      go to state 18
    Whilestmt   go to state 19


State 73

   17 Ifstmt: IF '(' E ')' THEN Slist ELSE . Slist ENDIF ';'

    ID        shift, and go to state 3
    READ      shift, and go to state 5
    WRITE     shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    BREAK     shift, and go to state 9
    CONTINUE  shift, and go to state 10

    Slist       go to state 76
    Stmt        go to state 12
    Breakstmt   go to state 13
    Contstmt    go to state 14
    InputStmt   go to state 15
    OutputStmt  go to state 16
    AsgStmt     go to state 17
    Ifstmt      go to state 18
    Whilestmt   go to state 19


State 74

   18 Ifstmt: IF '(' E ')' THEN Slist ENDIF . ';'

    ';'  shift, and go to state 77


State 75

   19 Whilestmt: WHILE '(' E ')' DO Slist ENDWHILE . ';'

    ';'  shift, and go to state 78


State 76

    3 Slist: Slist . Stmt
   17 Ifstmt: IF '(' E ')' THEN Slist ELSE Slist . ENDIF ';'

    ID        shift, and go to state 3
    READ      shift, and go to state 5
    WRITE     shift, and go to state 6
    IF        shift, and go to state 7
    ENDIF     shift, and go to state 79
    WHILE     shift, and go to state 8
    BREAK     shift, and go to state 9
    CONTINUE  shift, and go to state 10

    Stmt        go to state 30
    Breakstmt   go to state 13
    Contstmt    go to state 14
    InputStmt   go to state 15
    OutputStmt  go to state 16
    AsgStmt     go to state 17
    Ifstmt      go to state 18
    Whilestmt   go to state 19


State 77

   18 Ifstmt: IF '(' E ')' THEN Slist ENDIF ';' .

    $default  reduce using rule 18 (Ifstmt)


State 78

   19 Whilestmt: WHILE '(' E ')' DO Slist ENDWHILE ';' .

    $default  reduce using rule 19 (Whilestmt)


State 79

   17 Ifstmt: IF '(' E ')' THEN Slist ELSE Slist ENDIF . ';'

    ';'  shift, and go to state 80


State 80

   17 Ifstmt: IF '(' E ')' THEN Slist ELSE Slist ENDIF ';' .

    $default  reduce using rule 17 (Ifstmt)
