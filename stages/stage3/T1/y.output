Grammar

    0 $accept: start $end

    1 start: BEG Slist END ';'
    2      | BEG END ';'

    3 Slist: Slist Stmt
    4      | Stmt

    5 Stmt: InputStmt
    6     | OutputStmt
    7     | AsgStmt
    8     | Ifstmt
    9     | Whilestmt

   10 InputStmt: READ '(' ID ')' ';'

   11 OutputStmt: WRITE '(' E ')' ';'

   12 AsgStmt: ID EQ E ';'

   13 Ifstmt: IF '(' E ')' THEN Slist ELSE Slist ENDIF ';'
   14       | IF '(' E ')' THEN Slist ENDIF ';'

   15 Whilestmt: WHILE '(' E ')' DO Slist ENDWHILE ';'

   16 E: E PLUS E
   17  | E MINUS E
   18  | E MUL E
   19  | E DIV E
   20  | '(' E ')'
   21  | ID
   22  | NUM
   23  | E LT E
   24  | E GT E
   25  | E LE E
   26  | E GE E
   27  | E NE E
   28  | E EE E


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10 11 13 14 15 20
')' (41) 10 11 13 14 15 20
';' (59) 1 2 10 11 12 13 14 15
error (256)
NUM (258) 22
ID (259) 10 12 21
PLUS (260) 16
MINUS (261) 17
MUL (262) 18
DIV (263) 19
EQ (264) 12
LT (265) 23
GT (266) 24
LE (267) 25
GE (268) 26
NE (269) 27
EE (270) 28
BEG (271) 1 2
END (272) 1 2
READ (273) 10
WRITE (274) 11
IF (275) 13 14
THEN (276) 13 14
ELSE (277) 13
ENDIF (278) 13 14
WHILE (279) 15
DO (280) 15
ENDWHILE (281) 15


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
start (31)
    on left: 1 2, on right: 0
Slist (32)
    on left: 3 4, on right: 1 3 13 14 15
Stmt (33)
    on left: 5 6 7 8 9, on right: 3 4
InputStmt (34)
    on left: 10, on right: 5
OutputStmt (35)
    on left: 11, on right: 6
AsgStmt (36)
    on left: 12, on right: 7
Ifstmt (37)
    on left: 13 14, on right: 8
Whilestmt (38)
    on left: 15, on right: 9
E (39)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28, on right: 11 12
    13 14 15 16 17 18 19 20 23 24 25 26 27 28


State 0

    0 $accept: . start $end

    BEG  shift, and go to state 1

    start  go to state 2


State 1

    1 start: BEG . Slist END ';'
    2      | BEG . END ';'

    ID     shift, and go to state 3
    END    shift, and go to state 4
    READ   shift, and go to state 5
    WRITE  shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    Slist       go to state 9
    Stmt        go to state 10
    InputStmt   go to state 11
    OutputStmt  go to state 12
    AsgStmt     go to state 13
    Ifstmt      go to state 14
    Whilestmt   go to state 15


State 2

    0 $accept: start . $end

    $end  shift, and go to state 16


State 3

   12 AsgStmt: ID . EQ E ';'

    EQ  shift, and go to state 17


State 4

    2 start: BEG END . ';'

    ';'  shift, and go to state 18


State 5

   10 InputStmt: READ . '(' ID ')' ';'

    '('  shift, and go to state 19


State 6

   11 OutputStmt: WRITE . '(' E ')' ';'

    '('  shift, and go to state 20


State 7

   13 Ifstmt: IF . '(' E ')' THEN Slist ELSE Slist ENDIF ';'
   14       | IF . '(' E ')' THEN Slist ENDIF ';'

    '('  shift, and go to state 21


State 8

   15 Whilestmt: WHILE . '(' E ')' DO Slist ENDWHILE ';'

    '('  shift, and go to state 22


State 9

    1 start: BEG Slist . END ';'
    3 Slist: Slist . Stmt

    ID     shift, and go to state 3
    END    shift, and go to state 23
    READ   shift, and go to state 5
    WRITE  shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    Stmt        go to state 24
    InputStmt   go to state 11
    OutputStmt  go to state 12
    AsgStmt     go to state 13
    Ifstmt      go to state 14
    Whilestmt   go to state 15


State 10

    4 Slist: Stmt .

    $default  reduce using rule 4 (Slist)


State 11

    5 Stmt: InputStmt .

    $default  reduce using rule 5 (Stmt)


State 12

    6 Stmt: OutputStmt .

    $default  reduce using rule 6 (Stmt)


State 13

    7 Stmt: AsgStmt .

    $default  reduce using rule 7 (Stmt)


State 14

    8 Stmt: Ifstmt .

    $default  reduce using rule 8 (Stmt)


State 15

    9 Stmt: Whilestmt .

    $default  reduce using rule 9 (Stmt)


State 16

    0 $accept: start $end .

    $default  accept


State 17

   12 AsgStmt: ID EQ . E ';'

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    E  go to state 28


State 18

    2 start: BEG END ';' .

    $default  reduce using rule 2 (start)


State 19

   10 InputStmt: READ '(' . ID ')' ';'

    ID  shift, and go to state 29


State 20

   11 OutputStmt: WRITE '(' . E ')' ';'

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    E  go to state 30


State 21

   13 Ifstmt: IF '(' . E ')' THEN Slist ELSE Slist ENDIF ';'
   14       | IF '(' . E ')' THEN Slist ENDIF ';'

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    E  go to state 31


State 22

   15 Whilestmt: WHILE '(' . E ')' DO Slist ENDWHILE ';'

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    E  go to state 32


State 23

    1 start: BEG Slist END . ';'

    ';'  shift, and go to state 33


State 24

    3 Slist: Slist Stmt .

    $default  reduce using rule 3 (Slist)


State 25

   22 E: NUM .

    $default  reduce using rule 22 (E)


State 26

   21 E: ID .

    $default  reduce using rule 21 (E)


State 27

   20 E: '(' . E ')'

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    E  go to state 34


State 28

   12 AsgStmt: ID EQ E . ';'
   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38
    LT     shift, and go to state 39
    GT     shift, and go to state 40
    LE     shift, and go to state 41
    GE     shift, and go to state 42
    NE     shift, and go to state 43
    EE     shift, and go to state 44
    ';'    shift, and go to state 45


State 29

   10 InputStmt: READ '(' ID . ')' ';'

    ')'  shift, and go to state 46


State 30

   11 OutputStmt: WRITE '(' E . ')' ';'
   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38
    LT     shift, and go to state 39
    GT     shift, and go to state 40
    LE     shift, and go to state 41
    GE     shift, and go to state 42
    NE     shift, and go to state 43
    EE     shift, and go to state 44
    ')'    shift, and go to state 47


State 31

   13 Ifstmt: IF '(' E . ')' THEN Slist ELSE Slist ENDIF ';'
   14       | IF '(' E . ')' THEN Slist ENDIF ';'
   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38
    LT     shift, and go to state 39
    GT     shift, and go to state 40
    LE     shift, and go to state 41
    GE     shift, and go to state 42
    NE     shift, and go to state 43
    EE     shift, and go to state 44
    ')'    shift, and go to state 48


State 32

   15 Whilestmt: WHILE '(' E . ')' DO Slist ENDWHILE ';'
   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38
    LT     shift, and go to state 39
    GT     shift, and go to state 40
    LE     shift, and go to state 41
    GE     shift, and go to state 42
    NE     shift, and go to state 43
    EE     shift, and go to state 44
    ')'    shift, and go to state 49


State 33

    1 start: BEG Slist END ';' .

    $default  reduce using rule 1 (start)


State 34

   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   20  | '(' E . ')'
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38
    LT     shift, and go to state 39
    GT     shift, and go to state 40
    LE     shift, and go to state 41
    GE     shift, and go to state 42
    NE     shift, and go to state 43
    EE     shift, and go to state 44
    ')'    shift, and go to state 50


State 35

   16 E: E PLUS . E

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    E  go to state 51


State 36

   17 E: E MINUS . E

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    E  go to state 52


State 37

   18 E: E MUL . E

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    E  go to state 53


State 38

   19 E: E DIV . E

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    E  go to state 54


State 39

   23 E: E LT . E

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    E  go to state 55


State 40

   24 E: E GT . E

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    E  go to state 56


State 41

   25 E: E LE . E

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    E  go to state 57


State 42

   26 E: E GE . E

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    E  go to state 58


State 43

   27 E: E NE . E

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    E  go to state 59


State 44

   28 E: E EE . E

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    E  go to state 60


State 45

   12 AsgStmt: ID EQ E ';' .

    $default  reduce using rule 12 (AsgStmt)


State 46

   10 InputStmt: READ '(' ID ')' . ';'

    ';'  shift, and go to state 61


State 47

   11 OutputStmt: WRITE '(' E ')' . ';'

    ';'  shift, and go to state 62


State 48

   13 Ifstmt: IF '(' E ')' . THEN Slist ELSE Slist ENDIF ';'
   14       | IF '(' E ')' . THEN Slist ENDIF ';'

    THEN  shift, and go to state 63


State 49

   15 Whilestmt: WHILE '(' E ')' . DO Slist ENDWHILE ';'

    DO  shift, and go to state 64


State 50

   20 E: '(' E ')' .

    $default  reduce using rule 20 (E)


State 51

   16 E: E . PLUS E
   16  | E PLUS E .
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    MUL  shift, and go to state 37
    DIV  shift, and go to state 38

    $default  reduce using rule 16 (E)


State 52

   16 E: E . PLUS E
   17  | E . MINUS E
   17  | E MINUS E .
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    MUL  shift, and go to state 37
    DIV  shift, and go to state 38

    $default  reduce using rule 17 (E)


State 53

   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   18  | E MUL E .
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    $default  reduce using rule 18 (E)


State 54

   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   19  | E DIV E .
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    $default  reduce using rule 19 (E)


State 55

   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   23  | E LT E .
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EE  error (nonassociative)

    $default  reduce using rule 23 (E)


State 56

   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   24  | E GT E .
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EE  error (nonassociative)

    $default  reduce using rule 24 (E)


State 57

   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   25  | E LE E .
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EE  error (nonassociative)

    $default  reduce using rule 25 (E)


State 58

   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   26  | E GE E .
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EE  error (nonassociative)

    $default  reduce using rule 26 (E)


State 59

   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   27  | E NE E .
   28  | E . EE E

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EE  error (nonassociative)

    $default  reduce using rule 27 (E)


State 60

   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E
   28  | E EE E .

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EE  error (nonassociative)

    $default  reduce using rule 28 (E)


State 61

   10 InputStmt: READ '(' ID ')' ';' .

    $default  reduce using rule 10 (InputStmt)


State 62

   11 OutputStmt: WRITE '(' E ')' ';' .

    $default  reduce using rule 11 (OutputStmt)


State 63

   13 Ifstmt: IF '(' E ')' THEN . Slist ELSE Slist ENDIF ';'
   14       | IF '(' E ')' THEN . Slist ENDIF ';'

    ID     shift, and go to state 3
    READ   shift, and go to state 5
    WRITE  shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    Slist       go to state 65
    Stmt        go to state 10
    InputStmt   go to state 11
    OutputStmt  go to state 12
    AsgStmt     go to state 13
    Ifstmt      go to state 14
    Whilestmt   go to state 15


State 64

   15 Whilestmt: WHILE '(' E ')' DO . Slist ENDWHILE ';'

    ID     shift, and go to state 3
    READ   shift, and go to state 5
    WRITE  shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    Slist       go to state 66
    Stmt        go to state 10
    InputStmt   go to state 11
    OutputStmt  go to state 12
    AsgStmt     go to state 13
    Ifstmt      go to state 14
    Whilestmt   go to state 15


State 65

    3 Slist: Slist . Stmt
   13 Ifstmt: IF '(' E ')' THEN Slist . ELSE Slist ENDIF ';'
   14       | IF '(' E ')' THEN Slist . ENDIF ';'

    ID     shift, and go to state 3
    READ   shift, and go to state 5
    WRITE  shift, and go to state 6
    IF     shift, and go to state 7
    ELSE   shift, and go to state 67
    ENDIF  shift, and go to state 68
    WHILE  shift, and go to state 8

    Stmt        go to state 24
    InputStmt   go to state 11
    OutputStmt  go to state 12
    AsgStmt     go to state 13
    Ifstmt      go to state 14
    Whilestmt   go to state 15


State 66

    3 Slist: Slist . Stmt
   15 Whilestmt: WHILE '(' E ')' DO Slist . ENDWHILE ';'

    ID        shift, and go to state 3
    READ      shift, and go to state 5
    WRITE     shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    ENDWHILE  shift, and go to state 69

    Stmt        go to state 24
    InputStmt   go to state 11
    OutputStmt  go to state 12
    AsgStmt     go to state 13
    Ifstmt      go to state 14
    Whilestmt   go to state 15


State 67

   13 Ifstmt: IF '(' E ')' THEN Slist ELSE . Slist ENDIF ';'

    ID     shift, and go to state 3
    READ   shift, and go to state 5
    WRITE  shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    Slist       go to state 70
    Stmt        go to state 10
    InputStmt   go to state 11
    OutputStmt  go to state 12
    AsgStmt     go to state 13
    Ifstmt      go to state 14
    Whilestmt   go to state 15


State 68

   14 Ifstmt: IF '(' E ')' THEN Slist ENDIF . ';'

    ';'  shift, and go to state 71


State 69

   15 Whilestmt: WHILE '(' E ')' DO Slist ENDWHILE . ';'

    ';'  shift, and go to state 72


State 70

    3 Slist: Slist . Stmt
   13 Ifstmt: IF '(' E ')' THEN Slist ELSE Slist . ENDIF ';'

    ID     shift, and go to state 3
    READ   shift, and go to state 5
    WRITE  shift, and go to state 6
    IF     shift, and go to state 7
    ENDIF  shift, and go to state 73
    WHILE  shift, and go to state 8

    Stmt        go to state 24
    InputStmt   go to state 11
    OutputStmt  go to state 12
    AsgStmt     go to state 13
    Ifstmt      go to state 14
    Whilestmt   go to state 15


State 71

   14 Ifstmt: IF '(' E ')' THEN Slist ENDIF ';' .

    $default  reduce using rule 14 (Ifstmt)


State 72

   15 Whilestmt: WHILE '(' E ')' DO Slist ENDWHILE ';' .

    $default  reduce using rule 15 (Whilestmt)


State 73

   13 Ifstmt: IF '(' E ')' THEN Slist ELSE Slist ENDIF . ';'

    ';'  shift, and go to state 74


State 74

   13 Ifstmt: IF '(' E ')' THEN Slist ELSE Slist ENDIF ';' .

    $default  reduce using rule 13 (Ifstmt)
