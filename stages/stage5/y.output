Terminals unused in grammar

   INC
   DEC
   AND
   OR


State 152 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: Program

    2 Program: GDeclBlock FDefBlock MainBlock
    3        | GDeclBlock MainBlock
    4        | MainBlock

    5 GDeclBlock: DECL GDeclList ENDDECL ';'
    6           | DECL ENDDECL ';'

    7 GDeclList: GDeclList GDecl
    8          | GDecl

    9 GDecl: Type GidList ';'

   10 Type: INT
   11     | STR

   12 $@1: %empty

   13 $@2: %empty

   14 $@3: %empty

   15 GDecl: TUPLE ID $@1 '(' $@2 ParamList $@3 ')' Tid ';'

   16 Tid: Tid ',' tid
   17    | tid

   18 tid: ID
   19    | MUL ID

   20 GidList: GidList ',' Gid
   21        | Gid

   22 Gid: ID
   23    | ID '[' NUM ']'
   24    | ID '[' NUM ']' '[' NUM ']'
   25    | MUL ID

   26 $@4: %empty

   27 $@5: %empty

   28 Gid: ID '(' $@4 ParamList $@5 ')'

   29 $@6: %empty

   30 $@7: %empty

   31 Gid: MUL ID '(' $@6 ParamList $@7 ')'

   32 FDefBlock: FDefBlock FDef
   33          | FDef

   34 $@8: %empty

   35 $@9: %empty

   36 $@10: %empty

   37 $@11: %empty

   38 FDef: Type ID '(' $@8 ParamList ')' $@9 '{' $@10 LDeclBlock $@11 Body '}'

   39 ParamList: ParamList ',' Param
   40          | Param
   41          | %empty

   42 Param: Type Pid

   43 Pid: ID
   44    | MUL ID

   45 LDeclBlock: DECL LDecList ENDDECL ';'
   46           | DECL ENDDECL ';'

   47 LDecList: LDecList LDecl
   48         | LDecl

   49 LDecl: Type IdList ';'

   50 IdList: IdList ',' Lid
   51       | Lid

   52 Lid: ID

   53 $@12: %empty

   54 $@13: %empty

   55 $@14: %empty

   56 MainBlock: INT MAIN $@12 '(' ')' '{' $@13 LDeclBlock $@14 Body '}'

   57 Body: BEG Slist END ';'
   58     | BEG END ';'

   59 Slist: Slist Stmt
   60      | Stmt

   61 Stmt: READ '(' id ')' ';'
   62     | WRITE '(' Arth ')' ';'
   63     | WRITE STRING ';'
   64     | id EQ Arth ';'
   65     | IF '(' Bool ')' THEN Slist ELSE Slist ENDIF ';'
   66     | IF '(' Bool ')' THEN Slist ENDIF ';'
   67     | WHILE '(' Bool ')' DO Slist ENDWHILE ';'
   68     | REPEAT Slist UNTIL '(' Bool ')' ';'
   69     | DO Slist WHILE '(' Bool ')' ';'
   70     | BREAK ';'
   71     | CONTINUE ';'
   72     | RETURN Arth ';'
   73     | BRKP ';'
   74     | EXIT ';'

   75 Arth: Arth PLUS Arth
   76     | Arth MINUS Arth
   77     | Arth MUL Arth
   78     | Arth DIV Arth
   79     | Arth MOD Arth
   80     | '(' Arth ')'
   81     | NUM
   82     | STRING
   83     | id
   84     | ID '(' ')'
   85     | ID '(' ArgList ')'

   86 ArgList: ArgList ',' Arth
   87        | Arth

   88 Bool: Arth LT Arth
   89     | Arth LE Arth
   90     | Arth GT Arth
   91     | Arth GE Arth
   92     | Arth EE Arth
   93     | Arth NE Arth

   94 id: ID
   95   | ID '[' Arth ']'
   96   | ID '[' NUM ']' '[' NUM ']'
   97   | MUL id
   98   | '&' id
   99   | ID '.' ID


Terminals, with rules where they appear

$end (0) 0
'&' (38) 98
'(' (40) 15 28 31 38 56 61 62 65 66 67 68 69 80 84 85
')' (41) 15 28 31 38 56 61 62 65 66 67 68 69 80 84 85
',' (44) 16 20 39 50 86
'.' (46) 99
';' (59) 5 6 9 15 45 46 49 57 58 61 62 63 64 65 66 67 68 69 70 71 72
    73 74
'[' (91) 23 24 95 96
']' (93) 23 24 95 96
'{' (123) 38 56
'}' (125) 38 56
error (256)
NUM (258) 23 24 81 96
ID (259) 15 18 19 22 23 24 25 28 31 38 43 44 52 84 85 94 95 96 99
STRING (260) 63 82
PLUS (261) 75
MINUS (262) 76
MUL (263) 19 25 31 44 77 97
DIV (264) 78
MOD (265) 79
EQ (266) 64
INC (267)
DEC (268)
BEG (269) 57 58
END (270) 57 58
READ (271) 61
WRITE (272) 62 63
IF (273) 65 66
THEN (274) 65 66
ELSE (275) 65
ENDIF (276) 65 66
WHILE (277) 67 69
DO (278) 67 69
ENDWHILE (279) 67
BREAK (280) 70
CONTINUE (281) 71
REPEAT (282) 68
UNTIL (283) 68
DECL (284) 5 6 45 46
ENDDECL (285) 5 6 45 46
INT (286) 10 56
STR (287) 11
TUPLE (288) 15
MAIN (289) 56
RETURN (290) 72
BRKP (291) 73
EXIT (292) 74
AND (293)
OR (294)
LT (295) 88
LE (296) 89
GT (297) 90
GE (298) 91
EE (299) 92
NE (300) 93


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
start (57)
    on left: 1, on right: 0
Program (58)
    on left: 2 3 4, on right: 1
GDeclBlock (59)
    on left: 5 6, on right: 2 3
GDeclList (60)
    on left: 7 8, on right: 5 7
GDecl (61)
    on left: 9 15, on right: 7 8
Type (62)
    on left: 10 11, on right: 9 38 42 49
$@1 (63)
    on left: 12, on right: 15
$@2 (64)
    on left: 13, on right: 15
$@3 (65)
    on left: 14, on right: 15
Tid (66)
    on left: 16 17, on right: 15 16
tid (67)
    on left: 18 19, on right: 16 17
GidList (68)
    on left: 20 21, on right: 9 20
Gid (69)
    on left: 22 23 24 25 28 31, on right: 20 21
$@4 (70)
    on left: 26, on right: 28
$@5 (71)
    on left: 27, on right: 28
$@6 (72)
    on left: 29, on right: 31
$@7 (73)
    on left: 30, on right: 31
FDefBlock (74)
    on left: 32 33, on right: 2 32
FDef (75)
    on left: 38, on right: 32 33
$@8 (76)
    on left: 34, on right: 38
$@9 (77)
    on left: 35, on right: 38
$@10 (78)
    on left: 36, on right: 38
$@11 (79)
    on left: 37, on right: 38
ParamList (80)
    on left: 39 40 41, on right: 15 28 31 38 39
Param (81)
    on left: 42, on right: 39 40
Pid (82)
    on left: 43 44, on right: 42
LDeclBlock (83)
    on left: 45 46, on right: 38 56
LDecList (84)
    on left: 47 48, on right: 45 47
LDecl (85)
    on left: 49, on right: 47 48
IdList (86)
    on left: 50 51, on right: 49 50
Lid (87)
    on left: 52, on right: 50 51
MainBlock (88)
    on left: 56, on right: 2 3 4
$@12 (89)
    on left: 53, on right: 56
$@13 (90)
    on left: 54, on right: 56
$@14 (91)
    on left: 55, on right: 56
Body (92)
    on left: 57 58, on right: 38 56
Slist (93)
    on left: 59 60, on right: 57 59 65 66 67 68 69
Stmt (94)
    on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74, on right: 59
    60
Arth (95)
    on left: 75 76 77 78 79 80 81 82 83 84 85, on right: 62 64 72 75
    76 77 78 79 80 86 87 88 89 90 91 92 93 95
ArgList (96)
    on left: 86 87, on right: 85 86
Bool (97)
    on left: 88 89 90 91 92 93, on right: 65 66 67 68 69
id (98)
    on left: 94 95 96 97 98 99, on right: 61 64 83 97 98


State 0

    0 $accept: . start $end

    DECL  shift, and go to state 1
    INT   shift, and go to state 2

    start       go to state 3
    Program     go to state 4
    GDeclBlock  go to state 5
    MainBlock   go to state 6


State 1

    5 GDeclBlock: DECL . GDeclList ENDDECL ';'
    6           | DECL . ENDDECL ';'

    ENDDECL  shift, and go to state 7
    INT      shift, and go to state 8
    STR      shift, and go to state 9
    TUPLE    shift, and go to state 10

    GDeclList  go to state 11
    GDecl      go to state 12
    Type       go to state 13


State 2

   56 MainBlock: INT . MAIN $@12 '(' ')' '{' $@13 LDeclBlock $@14 Body '}'

    MAIN  shift, and go to state 14


State 3

    0 $accept: start . $end

    $end  shift, and go to state 15


State 4

    1 start: Program .

    $default  reduce using rule 1 (start)


State 5

    2 Program: GDeclBlock . FDefBlock MainBlock
    3        | GDeclBlock . MainBlock

    INT  shift, and go to state 16
    STR  shift, and go to state 9

    Type       go to state 17
    FDefBlock  go to state 18
    FDef       go to state 19
    MainBlock  go to state 20


State 6

    4 Program: MainBlock .

    $default  reduce using rule 4 (Program)


State 7

    6 GDeclBlock: DECL ENDDECL . ';'

    ';'  shift, and go to state 21


State 8

   10 Type: INT .

    $default  reduce using rule 10 (Type)


State 9

   11 Type: STR .

    $default  reduce using rule 11 (Type)


State 10

   15 GDecl: TUPLE . ID $@1 '(' $@2 ParamList $@3 ')' Tid ';'

    ID  shift, and go to state 22


State 11

    5 GDeclBlock: DECL GDeclList . ENDDECL ';'
    7 GDeclList: GDeclList . GDecl

    ENDDECL  shift, and go to state 23
    INT      shift, and go to state 8
    STR      shift, and go to state 9
    TUPLE    shift, and go to state 10

    GDecl  go to state 24
    Type   go to state 13


State 12

    8 GDeclList: GDecl .

    $default  reduce using rule 8 (GDeclList)


State 13

    9 GDecl: Type . GidList ';'

    ID   shift, and go to state 25
    MUL  shift, and go to state 26

    GidList  go to state 27
    Gid      go to state 28


State 14

   56 MainBlock: INT MAIN . $@12 '(' ')' '{' $@13 LDeclBlock $@14 Body '}'

    $default  reduce using rule 53 ($@12)

    $@12  go to state 29


State 15

    0 $accept: start $end .

    $default  accept


State 16

   10 Type: INT .
   56 MainBlock: INT . MAIN $@12 '(' ')' '{' $@13 LDeclBlock $@14 Body '}'

    MAIN  shift, and go to state 14

    $default  reduce using rule 10 (Type)


State 17

   38 FDef: Type . ID '(' $@8 ParamList ')' $@9 '{' $@10 LDeclBlock $@11 Body '}'

    ID  shift, and go to state 30


State 18

    2 Program: GDeclBlock FDefBlock . MainBlock
   32 FDefBlock: FDefBlock . FDef

    INT  shift, and go to state 16
    STR  shift, and go to state 9

    Type       go to state 17
    FDef       go to state 31
    MainBlock  go to state 32


State 19

   33 FDefBlock: FDef .

    $default  reduce using rule 33 (FDefBlock)


State 20

    3 Program: GDeclBlock MainBlock .

    $default  reduce using rule 3 (Program)


State 21

    6 GDeclBlock: DECL ENDDECL ';' .

    $default  reduce using rule 6 (GDeclBlock)


State 22

   15 GDecl: TUPLE ID . $@1 '(' $@2 ParamList $@3 ')' Tid ';'

    $default  reduce using rule 12 ($@1)

    $@1  go to state 33


State 23

    5 GDeclBlock: DECL GDeclList ENDDECL . ';'

    ';'  shift, and go to state 34


State 24

    7 GDeclList: GDeclList GDecl .

    $default  reduce using rule 7 (GDeclList)


State 25

   22 Gid: ID .
   23    | ID . '[' NUM ']'
   24    | ID . '[' NUM ']' '[' NUM ']'
   28    | ID . '(' $@4 ParamList $@5 ')'

    '('  shift, and go to state 35
    '['  shift, and go to state 36

    $default  reduce using rule 22 (Gid)


State 26

   25 Gid: MUL . ID
   31    | MUL . ID '(' $@6 ParamList $@7 ')'

    ID  shift, and go to state 37


State 27

    9 GDecl: Type GidList . ';'
   20 GidList: GidList . ',' Gid

    ';'  shift, and go to state 38
    ','  shift, and go to state 39


State 28

   21 GidList: Gid .

    $default  reduce using rule 21 (GidList)


State 29

   56 MainBlock: INT MAIN $@12 . '(' ')' '{' $@13 LDeclBlock $@14 Body '}'

    '('  shift, and go to state 40


State 30

   38 FDef: Type ID . '(' $@8 ParamList ')' $@9 '{' $@10 LDeclBlock $@11 Body '}'

    '('  shift, and go to state 41


State 31

   32 FDefBlock: FDefBlock FDef .

    $default  reduce using rule 32 (FDefBlock)


State 32

    2 Program: GDeclBlock FDefBlock MainBlock .

    $default  reduce using rule 2 (Program)


State 33

   15 GDecl: TUPLE ID $@1 . '(' $@2 ParamList $@3 ')' Tid ';'

    '('  shift, and go to state 42


State 34

    5 GDeclBlock: DECL GDeclList ENDDECL ';' .

    $default  reduce using rule 5 (GDeclBlock)


State 35

   28 Gid: ID '(' . $@4 ParamList $@5 ')'

    $default  reduce using rule 26 ($@4)

    $@4  go to state 43


State 36

   23 Gid: ID '[' . NUM ']'
   24    | ID '[' . NUM ']' '[' NUM ']'

    NUM  shift, and go to state 44


State 37

   25 Gid: MUL ID .
   31    | MUL ID . '(' $@6 ParamList $@7 ')'

    '('  shift, and go to state 45

    $default  reduce using rule 25 (Gid)


State 38

    9 GDecl: Type GidList ';' .

    $default  reduce using rule 9 (GDecl)


State 39

   20 GidList: GidList ',' . Gid

    ID   shift, and go to state 25
    MUL  shift, and go to state 26

    Gid  go to state 46


State 40

   56 MainBlock: INT MAIN $@12 '(' . ')' '{' $@13 LDeclBlock $@14 Body '}'

    ')'  shift, and go to state 47


State 41

   38 FDef: Type ID '(' . $@8 ParamList ')' $@9 '{' $@10 LDeclBlock $@11 Body '}'

    $default  reduce using rule 34 ($@8)

    $@8  go to state 48


State 42

   15 GDecl: TUPLE ID $@1 '(' . $@2 ParamList $@3 ')' Tid ';'

    $default  reduce using rule 13 ($@2)

    $@2  go to state 49


State 43

   28 Gid: ID '(' $@4 . ParamList $@5 ')'

    INT  shift, and go to state 8
    STR  shift, and go to state 9

    $default  reduce using rule 41 (ParamList)

    Type       go to state 50
    ParamList  go to state 51
    Param      go to state 52


State 44

   23 Gid: ID '[' NUM . ']'
   24    | ID '[' NUM . ']' '[' NUM ']'

    ']'  shift, and go to state 53


State 45

   31 Gid: MUL ID '(' . $@6 ParamList $@7 ')'

    $default  reduce using rule 29 ($@6)

    $@6  go to state 54


State 46

   20 GidList: GidList ',' Gid .

    $default  reduce using rule 20 (GidList)


State 47

   56 MainBlock: INT MAIN $@12 '(' ')' . '{' $@13 LDeclBlock $@14 Body '}'

    '{'  shift, and go to state 55


State 48

   38 FDef: Type ID '(' $@8 . ParamList ')' $@9 '{' $@10 LDeclBlock $@11 Body '}'

    INT  shift, and go to state 8
    STR  shift, and go to state 9

    $default  reduce using rule 41 (ParamList)

    Type       go to state 50
    ParamList  go to state 56
    Param      go to state 52


State 49

   15 GDecl: TUPLE ID $@1 '(' $@2 . ParamList $@3 ')' Tid ';'

    INT  shift, and go to state 8
    STR  shift, and go to state 9

    $default  reduce using rule 41 (ParamList)

    Type       go to state 50
    ParamList  go to state 57
    Param      go to state 52


State 50

   42 Param: Type . Pid

    ID   shift, and go to state 58
    MUL  shift, and go to state 59

    Pid  go to state 60


State 51

   28 Gid: ID '(' $@4 ParamList . $@5 ')'
   39 ParamList: ParamList . ',' Param

    ','  shift, and go to state 61

    $default  reduce using rule 27 ($@5)

    $@5  go to state 62


State 52

   40 ParamList: Param .

    $default  reduce using rule 40 (ParamList)


State 53

   23 Gid: ID '[' NUM ']' .
   24    | ID '[' NUM ']' . '[' NUM ']'

    '['  shift, and go to state 63

    $default  reduce using rule 23 (Gid)


State 54

   31 Gid: MUL ID '(' $@6 . ParamList $@7 ')'

    INT  shift, and go to state 8
    STR  shift, and go to state 9

    $default  reduce using rule 41 (ParamList)

    Type       go to state 50
    ParamList  go to state 64
    Param      go to state 52


State 55

   56 MainBlock: INT MAIN $@12 '(' ')' '{' . $@13 LDeclBlock $@14 Body '}'

    $default  reduce using rule 54 ($@13)

    $@13  go to state 65


State 56

   38 FDef: Type ID '(' $@8 ParamList . ')' $@9 '{' $@10 LDeclBlock $@11 Body '}'
   39 ParamList: ParamList . ',' Param

    ')'  shift, and go to state 66
    ','  shift, and go to state 61


State 57

   15 GDecl: TUPLE ID $@1 '(' $@2 ParamList . $@3 ')' Tid ';'
   39 ParamList: ParamList . ',' Param

    ','  shift, and go to state 61

    $default  reduce using rule 14 ($@3)

    $@3  go to state 67


State 58

   43 Pid: ID .

    $default  reduce using rule 43 (Pid)


State 59

   44 Pid: MUL . ID

    ID  shift, and go to state 68


State 60

   42 Param: Type Pid .

    $default  reduce using rule 42 (Param)


State 61

   39 ParamList: ParamList ',' . Param

    INT  shift, and go to state 8
    STR  shift, and go to state 9

    Type   go to state 50
    Param  go to state 69


State 62

   28 Gid: ID '(' $@4 ParamList $@5 . ')'

    ')'  shift, and go to state 70


State 63

   24 Gid: ID '[' NUM ']' '[' . NUM ']'

    NUM  shift, and go to state 71


State 64

   31 Gid: MUL ID '(' $@6 ParamList . $@7 ')'
   39 ParamList: ParamList . ',' Param

    ','  shift, and go to state 61

    $default  reduce using rule 30 ($@7)

    $@7  go to state 72


State 65

   56 MainBlock: INT MAIN $@12 '(' ')' '{' $@13 . LDeclBlock $@14 Body '}'

    DECL  shift, and go to state 73

    LDeclBlock  go to state 74


State 66

   38 FDef: Type ID '(' $@8 ParamList ')' . $@9 '{' $@10 LDeclBlock $@11 Body '}'

    $default  reduce using rule 35 ($@9)

    $@9  go to state 75


State 67

   15 GDecl: TUPLE ID $@1 '(' $@2 ParamList $@3 . ')' Tid ';'

    ')'  shift, and go to state 76


State 68

   44 Pid: MUL ID .

    $default  reduce using rule 44 (Pid)


State 69

   39 ParamList: ParamList ',' Param .

    $default  reduce using rule 39 (ParamList)


State 70

   28 Gid: ID '(' $@4 ParamList $@5 ')' .

    $default  reduce using rule 28 (Gid)


State 71

   24 Gid: ID '[' NUM ']' '[' NUM . ']'

    ']'  shift, and go to state 77


State 72

   31 Gid: MUL ID '(' $@6 ParamList $@7 . ')'

    ')'  shift, and go to state 78


State 73

   45 LDeclBlock: DECL . LDecList ENDDECL ';'
   46           | DECL . ENDDECL ';'

    ENDDECL  shift, and go to state 79
    INT      shift, and go to state 8
    STR      shift, and go to state 9

    Type      go to state 80
    LDecList  go to state 81
    LDecl     go to state 82


State 74

   56 MainBlock: INT MAIN $@12 '(' ')' '{' $@13 LDeclBlock . $@14 Body '}'

    $default  reduce using rule 55 ($@14)

    $@14  go to state 83


State 75

   38 FDef: Type ID '(' $@8 ParamList ')' $@9 . '{' $@10 LDeclBlock $@11 Body '}'

    '{'  shift, and go to state 84


State 76

   15 GDecl: TUPLE ID $@1 '(' $@2 ParamList $@3 ')' . Tid ';'

    ID   shift, and go to state 85
    MUL  shift, and go to state 86

    Tid  go to state 87
    tid  go to state 88


State 77

   24 Gid: ID '[' NUM ']' '[' NUM ']' .

    $default  reduce using rule 24 (Gid)


State 78

   31 Gid: MUL ID '(' $@6 ParamList $@7 ')' .

    $default  reduce using rule 31 (Gid)


State 79

   46 LDeclBlock: DECL ENDDECL . ';'

    ';'  shift, and go to state 89


State 80

   49 LDecl: Type . IdList ';'

    ID  shift, and go to state 90

    IdList  go to state 91
    Lid     go to state 92


State 81

   45 LDeclBlock: DECL LDecList . ENDDECL ';'
   47 LDecList: LDecList . LDecl

    ENDDECL  shift, and go to state 93
    INT      shift, and go to state 8
    STR      shift, and go to state 9

    Type   go to state 80
    LDecl  go to state 94


State 82

   48 LDecList: LDecl .

    $default  reduce using rule 48 (LDecList)


State 83

   56 MainBlock: INT MAIN $@12 '(' ')' '{' $@13 LDeclBlock $@14 . Body '}'

    BEG  shift, and go to state 95

    Body  go to state 96


State 84

   38 FDef: Type ID '(' $@8 ParamList ')' $@9 '{' . $@10 LDeclBlock $@11 Body '}'

    $default  reduce using rule 36 ($@10)

    $@10  go to state 97


State 85

   18 tid: ID .

    $default  reduce using rule 18 (tid)


State 86

   19 tid: MUL . ID

    ID  shift, and go to state 98


State 87

   15 GDecl: TUPLE ID $@1 '(' $@2 ParamList $@3 ')' Tid . ';'
   16 Tid: Tid . ',' tid

    ';'  shift, and go to state 99
    ','  shift, and go to state 100


State 88

   17 Tid: tid .

    $default  reduce using rule 17 (Tid)


State 89

   46 LDeclBlock: DECL ENDDECL ';' .

    $default  reduce using rule 46 (LDeclBlock)


State 90

   52 Lid: ID .

    $default  reduce using rule 52 (Lid)


State 91

   49 LDecl: Type IdList . ';'
   50 IdList: IdList . ',' Lid

    ';'  shift, and go to state 101
    ','  shift, and go to state 102


State 92

   51 IdList: Lid .

    $default  reduce using rule 51 (IdList)


State 93

   45 LDeclBlock: DECL LDecList ENDDECL . ';'

    ';'  shift, and go to state 103


State 94

   47 LDecList: LDecList LDecl .

    $default  reduce using rule 47 (LDecList)


State 95

   57 Body: BEG . Slist END ';'
   58     | BEG . END ';'

    ID        shift, and go to state 104
    MUL       shift, and go to state 105
    END       shift, and go to state 106
    READ      shift, and go to state 107
    WRITE     shift, and go to state 108
    IF        shift, and go to state 109
    WHILE     shift, and go to state 110
    DO        shift, and go to state 111
    BREAK     shift, and go to state 112
    CONTINUE  shift, and go to state 113
    REPEAT    shift, and go to state 114
    RETURN    shift, and go to state 115
    BRKP      shift, and go to state 116
    EXIT      shift, and go to state 117
    '&'       shift, and go to state 118

    Slist  go to state 119
    Stmt   go to state 120
    id     go to state 121


State 96

   56 MainBlock: INT MAIN $@12 '(' ')' '{' $@13 LDeclBlock $@14 Body . '}'

    '}'  shift, and go to state 122


State 97

   38 FDef: Type ID '(' $@8 ParamList ')' $@9 '{' $@10 . LDeclBlock $@11 Body '}'

    DECL  shift, and go to state 73

    LDeclBlock  go to state 123


State 98

   19 tid: MUL ID .

    $default  reduce using rule 19 (tid)


State 99

   15 GDecl: TUPLE ID $@1 '(' $@2 ParamList $@3 ')' Tid ';' .

    $default  reduce using rule 15 (GDecl)


State 100

   16 Tid: Tid ',' . tid

    ID   shift, and go to state 85
    MUL  shift, and go to state 86

    tid  go to state 124


State 101

   49 LDecl: Type IdList ';' .

    $default  reduce using rule 49 (LDecl)


State 102

   50 IdList: IdList ',' . Lid

    ID  shift, and go to state 90

    Lid  go to state 125


State 103

   45 LDeclBlock: DECL LDecList ENDDECL ';' .

    $default  reduce using rule 45 (LDeclBlock)


State 104

   94 id: ID .
   95   | ID . '[' Arth ']'
   96   | ID . '[' NUM ']' '[' NUM ']'
   99   | ID . '.' ID

    '['  shift, and go to state 126
    '.'  shift, and go to state 127

    $default  reduce using rule 94 (id)


State 105

   97 id: MUL . id

    ID   shift, and go to state 104
    MUL  shift, and go to state 105
    '&'  shift, and go to state 118

    id  go to state 128


State 106

   58 Body: BEG END . ';'

    ';'  shift, and go to state 129


State 107

   61 Stmt: READ . '(' id ')' ';'

    '('  shift, and go to state 130


State 108

   62 Stmt: WRITE . '(' Arth ')' ';'
   63     | WRITE . STRING ';'

    STRING  shift, and go to state 131
    '('     shift, and go to state 132


State 109

   65 Stmt: IF . '(' Bool ')' THEN Slist ELSE Slist ENDIF ';'
   66     | IF . '(' Bool ')' THEN Slist ENDIF ';'

    '('  shift, and go to state 133


State 110

   67 Stmt: WHILE . '(' Bool ')' DO Slist ENDWHILE ';'

    '('  shift, and go to state 134


State 111

   69 Stmt: DO . Slist WHILE '(' Bool ')' ';'

    ID        shift, and go to state 104
    MUL       shift, and go to state 105
    READ      shift, and go to state 107
    WRITE     shift, and go to state 108
    IF        shift, and go to state 109
    WHILE     shift, and go to state 110
    DO        shift, and go to state 111
    BREAK     shift, and go to state 112
    CONTINUE  shift, and go to state 113
    REPEAT    shift, and go to state 114
    RETURN    shift, and go to state 115
    BRKP      shift, and go to state 116
    EXIT      shift, and go to state 117
    '&'       shift, and go to state 118

    Slist  go to state 135
    Stmt   go to state 120
    id     go to state 121


State 112

   70 Stmt: BREAK . ';'

    ';'  shift, and go to state 136


State 113

   71 Stmt: CONTINUE . ';'

    ';'  shift, and go to state 137


State 114

   68 Stmt: REPEAT . Slist UNTIL '(' Bool ')' ';'

    ID        shift, and go to state 104
    MUL       shift, and go to state 105
    READ      shift, and go to state 107
    WRITE     shift, and go to state 108
    IF        shift, and go to state 109
    WHILE     shift, and go to state 110
    DO        shift, and go to state 111
    BREAK     shift, and go to state 112
    CONTINUE  shift, and go to state 113
    REPEAT    shift, and go to state 114
    RETURN    shift, and go to state 115
    BRKP      shift, and go to state 116
    EXIT      shift, and go to state 117
    '&'       shift, and go to state 118

    Slist  go to state 138
    Stmt   go to state 120
    id     go to state 121


State 115

   72 Stmt: RETURN . Arth ';'

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 143
    id    go to state 144


State 116

   73 Stmt: BRKP . ';'

    ';'  shift, and go to state 145


State 117

   74 Stmt: EXIT . ';'

    ';'  shift, and go to state 146


State 118

   98 id: '&' . id

    ID   shift, and go to state 104
    MUL  shift, and go to state 105
    '&'  shift, and go to state 118

    id  go to state 147


State 119

   57 Body: BEG Slist . END ';'
   59 Slist: Slist . Stmt

    ID        shift, and go to state 104
    MUL       shift, and go to state 105
    END       shift, and go to state 148
    READ      shift, and go to state 107
    WRITE     shift, and go to state 108
    IF        shift, and go to state 109
    WHILE     shift, and go to state 110
    DO        shift, and go to state 111
    BREAK     shift, and go to state 112
    CONTINUE  shift, and go to state 113
    REPEAT    shift, and go to state 114
    RETURN    shift, and go to state 115
    BRKP      shift, and go to state 116
    EXIT      shift, and go to state 117
    '&'       shift, and go to state 118

    Stmt  go to state 149
    id    go to state 121


State 120

   60 Slist: Stmt .

    $default  reduce using rule 60 (Slist)


State 121

   64 Stmt: id . EQ Arth ';'

    EQ  shift, and go to state 150


State 122

   56 MainBlock: INT MAIN $@12 '(' ')' '{' $@13 LDeclBlock $@14 Body '}' .

    $default  reduce using rule 56 (MainBlock)


State 123

   38 FDef: Type ID '(' $@8 ParamList ')' $@9 '{' $@10 LDeclBlock . $@11 Body '}'

    $default  reduce using rule 37 ($@11)

    $@11  go to state 151


State 124

   16 Tid: Tid ',' tid .

    $default  reduce using rule 16 (Tid)


State 125

   50 IdList: IdList ',' Lid .

    $default  reduce using rule 50 (IdList)


State 126

   95 id: ID '[' . Arth ']'
   96   | ID '[' . NUM ']' '[' NUM ']'

    NUM     shift, and go to state 152
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 153
    id    go to state 144


State 127

   99 id: ID '.' . ID

    ID  shift, and go to state 154


State 128

   97 id: MUL id .

    $default  reduce using rule 97 (id)


State 129

   58 Body: BEG END ';' .

    $default  reduce using rule 58 (Body)


State 130

   61 Stmt: READ '(' . id ')' ';'

    ID   shift, and go to state 104
    MUL  shift, and go to state 105
    '&'  shift, and go to state 118

    id  go to state 155


State 131

   63 Stmt: WRITE STRING . ';'

    ';'  shift, and go to state 156


State 132

   62 Stmt: WRITE '(' . Arth ')' ';'

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 157
    id    go to state 144


State 133

   65 Stmt: IF '(' . Bool ')' THEN Slist ELSE Slist ENDIF ';'
   66     | IF '(' . Bool ')' THEN Slist ENDIF ';'

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 158
    Bool  go to state 159
    id    go to state 144


State 134

   67 Stmt: WHILE '(' . Bool ')' DO Slist ENDWHILE ';'

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 158
    Bool  go to state 160
    id    go to state 144


State 135

   59 Slist: Slist . Stmt
   69 Stmt: DO Slist . WHILE '(' Bool ')' ';'

    ID        shift, and go to state 104
    MUL       shift, and go to state 105
    READ      shift, and go to state 107
    WRITE     shift, and go to state 108
    IF        shift, and go to state 109
    WHILE     shift, and go to state 161
    DO        shift, and go to state 111
    BREAK     shift, and go to state 112
    CONTINUE  shift, and go to state 113
    REPEAT    shift, and go to state 114
    RETURN    shift, and go to state 115
    BRKP      shift, and go to state 116
    EXIT      shift, and go to state 117
    '&'       shift, and go to state 118

    Stmt  go to state 149
    id    go to state 121


State 136

   70 Stmt: BREAK ';' .

    $default  reduce using rule 70 (Stmt)


State 137

   71 Stmt: CONTINUE ';' .

    $default  reduce using rule 71 (Stmt)


State 138

   59 Slist: Slist . Stmt
   68 Stmt: REPEAT Slist . UNTIL '(' Bool ')' ';'

    ID        shift, and go to state 104
    MUL       shift, and go to state 105
    READ      shift, and go to state 107
    WRITE     shift, and go to state 108
    IF        shift, and go to state 109
    WHILE     shift, and go to state 110
    DO        shift, and go to state 111
    BREAK     shift, and go to state 112
    CONTINUE  shift, and go to state 113
    REPEAT    shift, and go to state 114
    UNTIL     shift, and go to state 162
    RETURN    shift, and go to state 115
    BRKP      shift, and go to state 116
    EXIT      shift, and go to state 117
    '&'       shift, and go to state 118

    Stmt  go to state 149
    id    go to state 121


State 139

   81 Arth: NUM .

    $default  reduce using rule 81 (Arth)


State 140

   84 Arth: ID . '(' ')'
   85     | ID . '(' ArgList ')'
   94 id: ID .
   95   | ID . '[' Arth ']'
   96   | ID . '[' NUM ']' '[' NUM ']'
   99   | ID . '.' ID

    '('  shift, and go to state 163
    '['  shift, and go to state 126
    '.'  shift, and go to state 127

    $default  reduce using rule 94 (id)


State 141

   82 Arth: STRING .

    $default  reduce using rule 82 (Arth)


State 142

   80 Arth: '(' . Arth ')'

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 164
    id    go to state 144


State 143

   72 Stmt: RETURN Arth . ';'
   75 Arth: Arth . PLUS Arth
   76     | Arth . MINUS Arth
   77     | Arth . MUL Arth
   78     | Arth . DIV Arth
   79     | Arth . MOD Arth

    PLUS   shift, and go to state 165
    MINUS  shift, and go to state 166
    MUL    shift, and go to state 167
    DIV    shift, and go to state 168
    MOD    shift, and go to state 169
    ';'    shift, and go to state 170


State 144

   83 Arth: id .

    $default  reduce using rule 83 (Arth)


State 145

   73 Stmt: BRKP ';' .

    $default  reduce using rule 73 (Stmt)


State 146

   74 Stmt: EXIT ';' .

    $default  reduce using rule 74 (Stmt)


State 147

   98 id: '&' id .

    $default  reduce using rule 98 (id)


State 148

   57 Body: BEG Slist END . ';'

    ';'  shift, and go to state 171


State 149

   59 Slist: Slist Stmt .

    $default  reduce using rule 59 (Slist)


State 150

   64 Stmt: id EQ . Arth ';'

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 172
    id    go to state 144


State 151

   38 FDef: Type ID '(' $@8 ParamList ')' $@9 '{' $@10 LDeclBlock $@11 . Body '}'

    BEG  shift, and go to state 95

    Body  go to state 173


State 152

   81 Arth: NUM .
   96 id: ID '[' NUM . ']' '[' NUM ']'

    ']'  shift, and go to state 174

    ']'       [reduce using rule 81 (Arth)]
    $default  reduce using rule 81 (Arth)


State 153

   75 Arth: Arth . PLUS Arth
   76     | Arth . MINUS Arth
   77     | Arth . MUL Arth
   78     | Arth . DIV Arth
   79     | Arth . MOD Arth
   95 id: ID '[' Arth . ']'

    PLUS   shift, and go to state 165
    MINUS  shift, and go to state 166
    MUL    shift, and go to state 167
    DIV    shift, and go to state 168
    MOD    shift, and go to state 169
    ']'    shift, and go to state 175


State 154

   99 id: ID '.' ID .

    $default  reduce using rule 99 (id)


State 155

   61 Stmt: READ '(' id . ')' ';'

    ')'  shift, and go to state 176


State 156

   63 Stmt: WRITE STRING ';' .

    $default  reduce using rule 63 (Stmt)


State 157

   62 Stmt: WRITE '(' Arth . ')' ';'
   75 Arth: Arth . PLUS Arth
   76     | Arth . MINUS Arth
   77     | Arth . MUL Arth
   78     | Arth . DIV Arth
   79     | Arth . MOD Arth

    PLUS   shift, and go to state 165
    MINUS  shift, and go to state 166
    MUL    shift, and go to state 167
    DIV    shift, and go to state 168
    MOD    shift, and go to state 169
    ')'    shift, and go to state 177


State 158

   75 Arth: Arth . PLUS Arth
   76     | Arth . MINUS Arth
   77     | Arth . MUL Arth
   78     | Arth . DIV Arth
   79     | Arth . MOD Arth
   88 Bool: Arth . LT Arth
   89     | Arth . LE Arth
   90     | Arth . GT Arth
   91     | Arth . GE Arth
   92     | Arth . EE Arth
   93     | Arth . NE Arth

    PLUS   shift, and go to state 165
    MINUS  shift, and go to state 166
    MUL    shift, and go to state 167
    DIV    shift, and go to state 168
    MOD    shift, and go to state 169
    LT     shift, and go to state 178
    LE     shift, and go to state 179
    GT     shift, and go to state 180
    GE     shift, and go to state 181
    EE     shift, and go to state 182
    NE     shift, and go to state 183


State 159

   65 Stmt: IF '(' Bool . ')' THEN Slist ELSE Slist ENDIF ';'
   66     | IF '(' Bool . ')' THEN Slist ENDIF ';'

    ')'  shift, and go to state 184


State 160

   67 Stmt: WHILE '(' Bool . ')' DO Slist ENDWHILE ';'

    ')'  shift, and go to state 185


State 161

   67 Stmt: WHILE . '(' Bool ')' DO Slist ENDWHILE ';'
   69     | DO Slist WHILE . '(' Bool ')' ';'

    '('  shift, and go to state 186


State 162

   68 Stmt: REPEAT Slist UNTIL . '(' Bool ')' ';'

    '('  shift, and go to state 187


State 163

   84 Arth: ID '(' . ')'
   85     | ID '(' . ArgList ')'

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    ')'     shift, and go to state 188
    '&'     shift, and go to state 118

    Arth     go to state 189
    ArgList  go to state 190
    id       go to state 144


State 164

   75 Arth: Arth . PLUS Arth
   76     | Arth . MINUS Arth
   77     | Arth . MUL Arth
   78     | Arth . DIV Arth
   79     | Arth . MOD Arth
   80     | '(' Arth . ')'

    PLUS   shift, and go to state 165
    MINUS  shift, and go to state 166
    MUL    shift, and go to state 167
    DIV    shift, and go to state 168
    MOD    shift, and go to state 169
    ')'    shift, and go to state 191


State 165

   75 Arth: Arth PLUS . Arth

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 192
    id    go to state 144


State 166

   76 Arth: Arth MINUS . Arth

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 193
    id    go to state 144


State 167

   77 Arth: Arth MUL . Arth

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 194
    id    go to state 144


State 168

   78 Arth: Arth DIV . Arth

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 195
    id    go to state 144


State 169

   79 Arth: Arth MOD . Arth

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 196
    id    go to state 144


State 170

   72 Stmt: RETURN Arth ';' .

    $default  reduce using rule 72 (Stmt)


State 171

   57 Body: BEG Slist END ';' .

    $default  reduce using rule 57 (Body)


State 172

   64 Stmt: id EQ Arth . ';'
   75 Arth: Arth . PLUS Arth
   76     | Arth . MINUS Arth
   77     | Arth . MUL Arth
   78     | Arth . DIV Arth
   79     | Arth . MOD Arth

    PLUS   shift, and go to state 165
    MINUS  shift, and go to state 166
    MUL    shift, and go to state 167
    DIV    shift, and go to state 168
    MOD    shift, and go to state 169
    ';'    shift, and go to state 197


State 173

   38 FDef: Type ID '(' $@8 ParamList ')' $@9 '{' $@10 LDeclBlock $@11 Body . '}'

    '}'  shift, and go to state 198


State 174

   96 id: ID '[' NUM ']' . '[' NUM ']'

    '['  shift, and go to state 199


State 175

   95 id: ID '[' Arth ']' .

    $default  reduce using rule 95 (id)


State 176

   61 Stmt: READ '(' id ')' . ';'

    ';'  shift, and go to state 200


State 177

   62 Stmt: WRITE '(' Arth ')' . ';'

    ';'  shift, and go to state 201


State 178

   88 Bool: Arth LT . Arth

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 202
    id    go to state 144


State 179

   89 Bool: Arth LE . Arth

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 203
    id    go to state 144


State 180

   90 Bool: Arth GT . Arth

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 204
    id    go to state 144


State 181

   91 Bool: Arth GE . Arth

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 205
    id    go to state 144


State 182

   92 Bool: Arth EE . Arth

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 206
    id    go to state 144


State 183

   93 Bool: Arth NE . Arth

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 207
    id    go to state 144


State 184

   65 Stmt: IF '(' Bool ')' . THEN Slist ELSE Slist ENDIF ';'
   66     | IF '(' Bool ')' . THEN Slist ENDIF ';'

    THEN  shift, and go to state 208


State 185

   67 Stmt: WHILE '(' Bool ')' . DO Slist ENDWHILE ';'

    DO  shift, and go to state 209


State 186

   67 Stmt: WHILE '(' . Bool ')' DO Slist ENDWHILE ';'
   69     | DO Slist WHILE '(' . Bool ')' ';'

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 158
    Bool  go to state 210
    id    go to state 144


State 187

   68 Stmt: REPEAT Slist UNTIL '(' . Bool ')' ';'

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 158
    Bool  go to state 211
    id    go to state 144


State 188

   84 Arth: ID '(' ')' .

    $default  reduce using rule 84 (Arth)


State 189

   75 Arth: Arth . PLUS Arth
   76     | Arth . MINUS Arth
   77     | Arth . MUL Arth
   78     | Arth . DIV Arth
   79     | Arth . MOD Arth
   87 ArgList: Arth .

    PLUS   shift, and go to state 165
    MINUS  shift, and go to state 166
    MUL    shift, and go to state 167
    DIV    shift, and go to state 168
    MOD    shift, and go to state 169

    $default  reduce using rule 87 (ArgList)


State 190

   85 Arth: ID '(' ArgList . ')'
   86 ArgList: ArgList . ',' Arth

    ')'  shift, and go to state 212
    ','  shift, and go to state 213


State 191

   80 Arth: '(' Arth ')' .

    $default  reduce using rule 80 (Arth)


State 192

   75 Arth: Arth . PLUS Arth
   75     | Arth PLUS Arth .
   76     | Arth . MINUS Arth
   77     | Arth . MUL Arth
   78     | Arth . DIV Arth
   79     | Arth . MOD Arth

    MUL  shift, and go to state 167
    DIV  shift, and go to state 168
    MOD  shift, and go to state 169

    $default  reduce using rule 75 (Arth)


State 193

   75 Arth: Arth . PLUS Arth
   76     | Arth . MINUS Arth
   76     | Arth MINUS Arth .
   77     | Arth . MUL Arth
   78     | Arth . DIV Arth
   79     | Arth . MOD Arth

    MUL  shift, and go to state 167
    DIV  shift, and go to state 168
    MOD  shift, and go to state 169

    $default  reduce using rule 76 (Arth)


State 194

   75 Arth: Arth . PLUS Arth
   76     | Arth . MINUS Arth
   77     | Arth . MUL Arth
   77     | Arth MUL Arth .
   78     | Arth . DIV Arth
   79     | Arth . MOD Arth

    $default  reduce using rule 77 (Arth)


State 195

   75 Arth: Arth . PLUS Arth
   76     | Arth . MINUS Arth
   77     | Arth . MUL Arth
   78     | Arth . DIV Arth
   78     | Arth DIV Arth .
   79     | Arth . MOD Arth

    $default  reduce using rule 78 (Arth)


State 196

   75 Arth: Arth . PLUS Arth
   76     | Arth . MINUS Arth
   77     | Arth . MUL Arth
   78     | Arth . DIV Arth
   79     | Arth . MOD Arth
   79     | Arth MOD Arth .

    $default  reduce using rule 79 (Arth)


State 197

   64 Stmt: id EQ Arth ';' .

    $default  reduce using rule 64 (Stmt)


State 198

   38 FDef: Type ID '(' $@8 ParamList ')' $@9 '{' $@10 LDeclBlock $@11 Body '}' .

    $default  reduce using rule 38 (FDef)


State 199

   96 id: ID '[' NUM ']' '[' . NUM ']'

    NUM  shift, and go to state 214


State 200

   61 Stmt: READ '(' id ')' ';' .

    $default  reduce using rule 61 (Stmt)


State 201

   62 Stmt: WRITE '(' Arth ')' ';' .

    $default  reduce using rule 62 (Stmt)


State 202

   75 Arth: Arth . PLUS Arth
   76     | Arth . MINUS Arth
   77     | Arth . MUL Arth
   78     | Arth . DIV Arth
   79     | Arth . MOD Arth
   88 Bool: Arth LT Arth .

    PLUS   shift, and go to state 165
    MINUS  shift, and go to state 166
    MUL    shift, and go to state 167
    DIV    shift, and go to state 168
    MOD    shift, and go to state 169

    $default  reduce using rule 88 (Bool)


State 203

   75 Arth: Arth . PLUS Arth
   76     | Arth . MINUS Arth
   77     | Arth . MUL Arth
   78     | Arth . DIV Arth
   79     | Arth . MOD Arth
   89 Bool: Arth LE Arth .

    PLUS   shift, and go to state 165
    MINUS  shift, and go to state 166
    MUL    shift, and go to state 167
    DIV    shift, and go to state 168
    MOD    shift, and go to state 169

    $default  reduce using rule 89 (Bool)


State 204

   75 Arth: Arth . PLUS Arth
   76     | Arth . MINUS Arth
   77     | Arth . MUL Arth
   78     | Arth . DIV Arth
   79     | Arth . MOD Arth
   90 Bool: Arth GT Arth .

    PLUS   shift, and go to state 165
    MINUS  shift, and go to state 166
    MUL    shift, and go to state 167
    DIV    shift, and go to state 168
    MOD    shift, and go to state 169

    $default  reduce using rule 90 (Bool)


State 205

   75 Arth: Arth . PLUS Arth
   76     | Arth . MINUS Arth
   77     | Arth . MUL Arth
   78     | Arth . DIV Arth
   79     | Arth . MOD Arth
   91 Bool: Arth GE Arth .

    PLUS   shift, and go to state 165
    MINUS  shift, and go to state 166
    MUL    shift, and go to state 167
    DIV    shift, and go to state 168
    MOD    shift, and go to state 169

    $default  reduce using rule 91 (Bool)


State 206

   75 Arth: Arth . PLUS Arth
   76     | Arth . MINUS Arth
   77     | Arth . MUL Arth
   78     | Arth . DIV Arth
   79     | Arth . MOD Arth
   92 Bool: Arth EE Arth .

    PLUS   shift, and go to state 165
    MINUS  shift, and go to state 166
    MUL    shift, and go to state 167
    DIV    shift, and go to state 168
    MOD    shift, and go to state 169

    $default  reduce using rule 92 (Bool)


State 207

   75 Arth: Arth . PLUS Arth
   76     | Arth . MINUS Arth
   77     | Arth . MUL Arth
   78     | Arth . DIV Arth
   79     | Arth . MOD Arth
   93 Bool: Arth NE Arth .

    PLUS   shift, and go to state 165
    MINUS  shift, and go to state 166
    MUL    shift, and go to state 167
    DIV    shift, and go to state 168
    MOD    shift, and go to state 169

    $default  reduce using rule 93 (Bool)


State 208

   65 Stmt: IF '(' Bool ')' THEN . Slist ELSE Slist ENDIF ';'
   66     | IF '(' Bool ')' THEN . Slist ENDIF ';'

    ID        shift, and go to state 104
    MUL       shift, and go to state 105
    READ      shift, and go to state 107
    WRITE     shift, and go to state 108
    IF        shift, and go to state 109
    WHILE     shift, and go to state 110
    DO        shift, and go to state 111
    BREAK     shift, and go to state 112
    CONTINUE  shift, and go to state 113
    REPEAT    shift, and go to state 114
    RETURN    shift, and go to state 115
    BRKP      shift, and go to state 116
    EXIT      shift, and go to state 117
    '&'       shift, and go to state 118

    Slist  go to state 215
    Stmt   go to state 120
    id     go to state 121


State 209

   67 Stmt: WHILE '(' Bool ')' DO . Slist ENDWHILE ';'

    ID        shift, and go to state 104
    MUL       shift, and go to state 105
    READ      shift, and go to state 107
    WRITE     shift, and go to state 108
    IF        shift, and go to state 109
    WHILE     shift, and go to state 110
    DO        shift, and go to state 111
    BREAK     shift, and go to state 112
    CONTINUE  shift, and go to state 113
    REPEAT    shift, and go to state 114
    RETURN    shift, and go to state 115
    BRKP      shift, and go to state 116
    EXIT      shift, and go to state 117
    '&'       shift, and go to state 118

    Slist  go to state 216
    Stmt   go to state 120
    id     go to state 121


State 210

   67 Stmt: WHILE '(' Bool . ')' DO Slist ENDWHILE ';'
   69     | DO Slist WHILE '(' Bool . ')' ';'

    ')'  shift, and go to state 217


State 211

   68 Stmt: REPEAT Slist UNTIL '(' Bool . ')' ';'

    ')'  shift, and go to state 218


State 212

   85 Arth: ID '(' ArgList ')' .

    $default  reduce using rule 85 (Arth)


State 213

   86 ArgList: ArgList ',' . Arth

    NUM     shift, and go to state 139
    ID      shift, and go to state 140
    STRING  shift, and go to state 141
    MUL     shift, and go to state 105
    '('     shift, and go to state 142
    '&'     shift, and go to state 118

    Arth  go to state 219
    id    go to state 144


State 214

   96 id: ID '[' NUM ']' '[' NUM . ']'

    ']'  shift, and go to state 220


State 215

   59 Slist: Slist . Stmt
   65 Stmt: IF '(' Bool ')' THEN Slist . ELSE Slist ENDIF ';'
   66     | IF '(' Bool ')' THEN Slist . ENDIF ';'

    ID        shift, and go to state 104
    MUL       shift, and go to state 105
    READ      shift, and go to state 107
    WRITE     shift, and go to state 108
    IF        shift, and go to state 109
    ELSE      shift, and go to state 221
    ENDIF     shift, and go to state 222
    WHILE     shift, and go to state 110
    DO        shift, and go to state 111
    BREAK     shift, and go to state 112
    CONTINUE  shift, and go to state 113
    REPEAT    shift, and go to state 114
    RETURN    shift, and go to state 115
    BRKP      shift, and go to state 116
    EXIT      shift, and go to state 117
    '&'       shift, and go to state 118

    Stmt  go to state 149
    id    go to state 121


State 216

   59 Slist: Slist . Stmt
   67 Stmt: WHILE '(' Bool ')' DO Slist . ENDWHILE ';'

    ID        shift, and go to state 104
    MUL       shift, and go to state 105
    READ      shift, and go to state 107
    WRITE     shift, and go to state 108
    IF        shift, and go to state 109
    WHILE     shift, and go to state 110
    DO        shift, and go to state 111
    ENDWHILE  shift, and go to state 223
    BREAK     shift, and go to state 112
    CONTINUE  shift, and go to state 113
    REPEAT    shift, and go to state 114
    RETURN    shift, and go to state 115
    BRKP      shift, and go to state 116
    EXIT      shift, and go to state 117
    '&'       shift, and go to state 118

    Stmt  go to state 149
    id    go to state 121


State 217

   67 Stmt: WHILE '(' Bool ')' . DO Slist ENDWHILE ';'
   69     | DO Slist WHILE '(' Bool ')' . ';'

    DO   shift, and go to state 209
    ';'  shift, and go to state 224


State 218

   68 Stmt: REPEAT Slist UNTIL '(' Bool ')' . ';'

    ';'  shift, and go to state 225


State 219

   75 Arth: Arth . PLUS Arth
   76     | Arth . MINUS Arth
   77     | Arth . MUL Arth
   78     | Arth . DIV Arth
   79     | Arth . MOD Arth
   86 ArgList: ArgList ',' Arth .

    PLUS   shift, and go to state 165
    MINUS  shift, and go to state 166
    MUL    shift, and go to state 167
    DIV    shift, and go to state 168
    MOD    shift, and go to state 169

    $default  reduce using rule 86 (ArgList)


State 220

   96 id: ID '[' NUM ']' '[' NUM ']' .

    $default  reduce using rule 96 (id)


State 221

   65 Stmt: IF '(' Bool ')' THEN Slist ELSE . Slist ENDIF ';'

    ID        shift, and go to state 104
    MUL       shift, and go to state 105
    READ      shift, and go to state 107
    WRITE     shift, and go to state 108
    IF        shift, and go to state 109
    WHILE     shift, and go to state 110
    DO        shift, and go to state 111
    BREAK     shift, and go to state 112
    CONTINUE  shift, and go to state 113
    REPEAT    shift, and go to state 114
    RETURN    shift, and go to state 115
    BRKP      shift, and go to state 116
    EXIT      shift, and go to state 117
    '&'       shift, and go to state 118

    Slist  go to state 226
    Stmt   go to state 120
    id     go to state 121


State 222

   66 Stmt: IF '(' Bool ')' THEN Slist ENDIF . ';'

    ';'  shift, and go to state 227


State 223

   67 Stmt: WHILE '(' Bool ')' DO Slist ENDWHILE . ';'

    ';'  shift, and go to state 228


State 224

   69 Stmt: DO Slist WHILE '(' Bool ')' ';' .

    $default  reduce using rule 69 (Stmt)


State 225

   68 Stmt: REPEAT Slist UNTIL '(' Bool ')' ';' .

    $default  reduce using rule 68 (Stmt)


State 226

   59 Slist: Slist . Stmt
   65 Stmt: IF '(' Bool ')' THEN Slist ELSE Slist . ENDIF ';'

    ID        shift, and go to state 104
    MUL       shift, and go to state 105
    READ      shift, and go to state 107
    WRITE     shift, and go to state 108
    IF        shift, and go to state 109
    ENDIF     shift, and go to state 229
    WHILE     shift, and go to state 110
    DO        shift, and go to state 111
    BREAK     shift, and go to state 112
    CONTINUE  shift, and go to state 113
    REPEAT    shift, and go to state 114
    RETURN    shift, and go to state 115
    BRKP      shift, and go to state 116
    EXIT      shift, and go to state 117
    '&'       shift, and go to state 118

    Stmt  go to state 149
    id    go to state 121


State 227

   66 Stmt: IF '(' Bool ')' THEN Slist ENDIF ';' .

    $default  reduce using rule 66 (Stmt)


State 228

   67 Stmt: WHILE '(' Bool ')' DO Slist ENDWHILE ';' .

    $default  reduce using rule 67 (Stmt)


State 229

   65 Stmt: IF '(' Bool ')' THEN Slist ELSE Slist ENDIF . ';'

    ';'  shift, and go to state 230


State 230

   65 Stmt: IF '(' Bool ')' THEN Slist ELSE Slist ENDIF ';' .

    $default  reduce using rule 65 (Stmt)
