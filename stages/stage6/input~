type
node{
	int m,n,d,q,r;
	node next,prev;
}
endtype
decl
int gcd(int m,int n);
int x,y;
node root,t;
enddecl
int gcd(int m,int n){
	decl
		int d,q,temp,r;
	enddecl
	begin
		q=m/n;
		r=m-q*n;
		if(r==0) then
			//x=0;
			//y=1;
			d=n;
		else
			d=gcd(n,r);
			//temp=y;
			//y=x-y*q;
			//x=temp;
		endif;
		t=alloc();
		t.m=m;
		t.n=n;
		t.r=r;
		t.q=q;
		t.d=d;
		t.next=root;
		root=t;
		return d;
	end
}
int main(){
	decl
		int g,a,b;
	enddecl
	begin
		initialize();
		root=null;
		read(a);
		read(b);
		g=gcd(a,b);
		print"GCD";
		write(g);
		//write(x);
		//write(y);
		
		print"printing";
		while(root!=null)do
			print"............";
			print(" dividend");
			print(root.m);
			print(" divisor");
			print(root.n);
			print(" GCD");
			print(root.d);
			print(" quotient");
			print(root.q);
			print(" remainder");
			print(root.r);
			root=root.next;
		endwhile;
		return 0;
	end
}
