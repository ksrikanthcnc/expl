0
2056
0
0
0
0
0
0
MOV SP,4097 --start
MOV BP,4098 --start
PUSH R0 --ret.val
CALL F1000
MOV R0, "Exit"
PUSH R0--"exit"
MOV R0, ""
PUSH R0--blank
PUSH R0--blank
PUSH R0--blank
PUSH R0--blank
CALL 0
F1:
PUSH BP --caller.bp
MOV BP,SP --act.rec
MOV R1,BP --BP+?
ADD R1,-3 --L.loc
MOV R0,[R1] --Lid.fetch
MOV R1, 0 --null
EQ R0,R1
JZ R0,L1
MOV R1, "Alloc"
PUSH R1 --"alloc"
MOV R1,R8
PUSH R1--size
MOV R1, "" --blank
PUSH R1--blank
PUSH R1--blank
PUSH R1--ret
CALL 0
POP R0--ret
POP R1--disc
POP R1--disc
POP R1--disc
POP R1--disc
MOV R1,BP --BP+?
ADD R1,-3 --L.loc
MOV [R1],R0 --Lalloc
MOV R2,BP --BP+?
ADD R2,-3 --L.loc
MOV R1,[R2] --lroot
ADD R1,0 --off
MOV R3,BP --BP+?
ADD R3,-4 --L.loc
MOV R2,[R3] --Lid.fetch
MOV [R1],R2 --asgn
MOV R2,BP --BP+?
ADD R2,-3 --L.loc
MOV R1,[R2] --lroot
ADD R1,1 --off
MOV R2, 0 --null
MOV [R1],R2 --asgn
MOV R2,BP --BP+?
ADD R2,-3 --L.loc
MOV R1,[R2] --lroot
ADD R1,2 --off
MOV R2, 0 --null
MOV [R1],R2 --asgn
JMP L2
L1:
MOV R1,BP --BP+?
ADD R1,-4 --L.loc
MOV R0,[R1] --Lid.fetch
MOV R2,BP --BP+?
ADD R2,-3 --L.loc
MOV R1,[R2] --lroot
ADD R1,0 --off
MOV R2,[R1] --fetch
MOV R1,[R1] --user
LT R0,R1
JZ R0,L3
MOV R2,BP --BP+?
ADD R2,-3 --L.loc
MOV R1,[R2] --lroot
ADD R1,1 --off
PUSH R1 --save.reg
PUSH R0 --save.reg
MOV R2,BP --BP+?
ADD R2,-4 --L.loc
MOV R1,[R2] --Lid.fetch
MOV R0,R1 --arg.val
PUSH R0 --arg
MOV R2,BP --BP+?
ADD R2,-3 --L.loc
MOV R1,[R2] --lroot
ADD R1,1 --off
MOV R2,[R1] --fetch
MOV R1,[R1] --user
MOV R0,R1 --arg.val
PUSH R0 --arg
MOV R0,""
PUSH R0 --for.ret
CALL F1
POP R2 --result
POP R19 --args
POP R19 --args
POP R0 --old.regs
POP R1 --old.regs
MOV [R1],R2 --asgn
JMP L4
L3:
MOV R1,BP --BP+?
ADD R1,-4 --L.loc
MOV R0,[R1] --Lid.fetch
MOV R2,BP --BP+?
ADD R2,-3 --L.loc
MOV R1,[R2] --lroot
ADD R1,0 --off
MOV R2,[R1] --fetch
MOV R1,[R1] --user
GT R0,R1
JZ R0,L5
MOV R2,BP --BP+?
ADD R2,-3 --L.loc
MOV R1,[R2] --lroot
ADD R1,2 --off
PUSH R1 --save.reg
PUSH R0 --save.reg
MOV R2,BP --BP+?
ADD R2,-4 --L.loc
MOV R1,[R2] --Lid.fetch
MOV R0,R1 --arg.val
PUSH R0 --arg
MOV R2,BP --BP+?
ADD R2,-3 --L.loc
MOV R1,[R2] --lroot
ADD R1,2 --off
MOV R2,[R1] --fetch
MOV R1,[R1] --user
MOV R0,R1 --arg.val
PUSH R0 --arg
MOV R0,""
PUSH R0 --for.ret
CALL F1
POP R2 --result
POP R19 --args
POP R19 --args
POP R0 --old.regs
POP R1 --old.regs
MOV [R1],R2 --asgn
L5:
L4:
L2:
MOV R2,BP --BP+?
ADD R2,-3 --L.loc
MOV R1,[R2] --Lid.fetch
MOV R0,BP
SUB R0,2 --(BP-2)
MOV [R0],R1 --sav.result
MOV BP,[SP] --old.bp
POP R0 --bp
RET
F2:
PUSH BP --caller.bp
MOV BP,SP --act.rec
MOV R1,BP --BP+?
ADD R1,-3 --L.loc
MOV R0,[R1] --Lid.fetch
MOV R1, 0 --null
NE R0,R1
JZ R0,L6
MOV R0,0 --extra
PUSH R0 --save.reg
MOV R2,BP --BP+?
ADD R2,-3 --L.loc
MOV R1,[R2] --lroot
ADD R1,1 --off
MOV R2,[R1] --fetch
MOV R1,[R1] --user
MOV R0,R1 --arg.val
PUSH R0 --arg
MOV R0,""
PUSH R0 --for.ret
CALL F2
POP R1 --result
POP R19 --args
POP R0 --old.regs
MOV R2,4096 --Gbind
ADD R2,R0 --Goff
MOV [R2],R1 --Gasgn
MOV R1,BP --BP+?
ADD R1,-3 --L.loc
MOV R0,[R1] --lroot
ADD R0,0 --off
MOV R1,[R0] --fetch
MOV R0,[R0] --user
MOV R2, "Write"
PUSH R2--"write"
MOV R2, -2
PUSH R2--(-2)
PUSH R0--data
MOV R2,""
PUSH R2--blank
PUSH R2--blank
CALL 0
POP R1--ret
POP R2--disc
POP R2--disc
POP R2--disc
POP R2--disc
MOV R0,0 --extra
PUSH R0 --save.reg
MOV R2,BP --BP+?
ADD R2,-3 --L.loc
MOV R1,[R2] --lroot
ADD R1,2 --off
MOV R2,[R1] --fetch
MOV R1,[R1] --user
MOV R0,R1 --arg.val
PUSH R0 --arg
MOV R0,""
PUSH R0 --for.ret
CALL F2
POP R1 --result
POP R19 --args
POP R0 --old.regs
MOV R2,4096 --Gbind
ADD R2,R0 --Goff
MOV [R2],R1 --Gasgn
L6:
MOV R1,1 --num
MOV R0,BP
SUB R0,2 --(BP-2)
MOV [R0],R1 --sav.result
MOV BP,[SP] --old.bp
POP R0 --bp
RET
F3:
PUSH BP --caller.bp
MOV BP,SP --act.rec
MOV R1,BP --BP+?
ADD R1,-3 --L.loc
MOV R0,[R1] --Lid.fetch
MOV R1, 0 --null
NE R0,R1
JZ R0,L7
MOV R1,BP --BP+?
ADD R1,-3 --L.loc
MOV R0,[R1] --lroot
ADD R0,0 --off
MOV R1,[R0] --fetch
MOV R0,[R0] --user
MOV R2, "Write"
PUSH R2--"write"
MOV R2, -2
PUSH R2--(-2)
PUSH R0--data
MOV R2,""
PUSH R2--blank
PUSH R2--blank
CALL 0
POP R1--ret
POP R2--disc
POP R2--disc
POP R2--disc
POP R2--disc
MOV R0,0 --extra
PUSH R0 --save.reg
MOV R2,BP --BP+?
ADD R2,-3 --L.loc
MOV R1,[R2] --lroot
ADD R1,1 --off
MOV R2,[R1] --fetch
MOV R1,[R1] --user
MOV R0,R1 --arg.val
PUSH R0 --arg
MOV R0,""
PUSH R0 --for.ret
CALL F3
POP R1 --result
POP R19 --args
POP R0 --old.regs
MOV R2,4096 --Gbind
ADD R2,R0 --Goff
MOV [R2],R1 --Gasgn
MOV R0,0 --extra
PUSH R0 --save.reg
MOV R2,BP --BP+?
ADD R2,-3 --L.loc
MOV R1,[R2] --lroot
ADD R1,2 --off
MOV R2,[R1] --fetch
MOV R1,[R1] --user
MOV R0,R1 --arg.val
PUSH R0 --arg
MOV R0,""
PUSH R0 --for.ret
CALL F3
POP R1 --result
POP R19 --args
POP R0 --old.regs
MOV R2,4096 --Gbind
ADD R2,R0 --Goff
MOV [R2],R1 --Gasgn
L7:
MOV R1,1 --num
MOV R0,BP
SUB R0,2 --(BP-2)
MOV [R0],R1 --sav.result
MOV BP,[SP] --old.bp
POP R0 --bp
RET
F4:
PUSH BP --caller.bp
MOV BP,SP --act.rec
MOV R1,BP --BP+?
ADD R1,-3 --L.loc
MOV R0,[R1] --Lid.fetch
MOV R1, 0 --null
NE R0,R1
JZ R0,L8
MOV R0,0 --extra
PUSH R0 --save.reg
MOV R2,BP --BP+?
ADD R2,-3 --L.loc
MOV R1,[R2] --lroot
ADD R1,1 --off
MOV R2,[R1] --fetch
MOV R1,[R1] --user
MOV R0,R1 --arg.val
PUSH R0 --arg
MOV R0,""
PUSH R0 --for.ret
CALL F4
POP R1 --result
POP R19 --args
POP R0 --old.regs
MOV R2,4096 --Gbind
ADD R2,R0 --Goff
MOV [R2],R1 --Gasgn
MOV R0,0 --extra
PUSH R0 --save.reg
MOV R2,BP --BP+?
ADD R2,-3 --L.loc
MOV R1,[R2] --lroot
ADD R1,2 --off
MOV R2,[R1] --fetch
MOV R1,[R1] --user
MOV R0,R1 --arg.val
PUSH R0 --arg
MOV R0,""
PUSH R0 --for.ret
CALL F4
POP R1 --result
POP R19 --args
POP R0 --old.regs
MOV R2,4096 --Gbind
ADD R2,R0 --Goff
MOV [R2],R1 --Gasgn
MOV R1,BP --BP+?
ADD R1,-3 --L.loc
MOV R0,[R1] --lroot
ADD R0,0 --off
MOV R1,[R0] --fetch
MOV R0,[R0] --user
MOV R2, "Write"
PUSH R2--"write"
MOV R2, -2
PUSH R2--(-2)
PUSH R0--data
MOV R2,""
PUSH R2--blank
PUSH R2--blank
CALL 0
POP R1--ret
POP R2--disc
POP R2--disc
POP R2--disc
POP R2--disc
L8:
MOV R1,1 --num
MOV R0,BP
SUB R0,2 --(BP-2)
MOV [R0],R1 --sav.result
MOV BP,[SP] --old.bp
POP R0 --bp
RET
F1000:
PUSH BP --caller.bp
MOV BP,SP --act.rec
MOV R0,"" --blank
PUSH R0 --for.locals
PUSH R0 --for.locals
PUSH R0 --for.locals
MOV R1, "Heapset"
PUSH R1 --"heapset"
MOV R1, "" --blank
PUSH R1--blank
PUSH R1--blank
PUSH R1--blank
PUSH R1--ret
CALL 0
POP R0--ret
POP R1--disc
POP R1--disc
POP R1--disc
POP R1--disc
MOV R1,BP --BP+?
ADD R1,3 --L.loc
MOV R2, 0 --null
MOV [R1],R2 --Lasgn
PUSH R0 --save.reg
MOV R0,BP --BP+?
ADD R0,1 --L.loc
MOV R2, "Read"
PUSH R2
MOV R2, -1
PUSH R2--(-1)
MOV R2, R0
PUSH R2--reg.addr
MOV R2, ""
PUSH R2--blank
PUSH R2--blank
CALL 0
POP R1--ret
POP R2--disc
POP R2--disc
POP R2--disc
POP R2--disc
POP R0 --old.regs
L9:
MOV R2,BP --BP+?
ADD R2,1 --L.loc
MOV R1,[R2] --Lid.fetch
MOV R2,0 --num
NE R1,R2
JZ R1,L10
MOV R2,BP --BP+?
ADD R2,3 --L.loc
PUSH R2 --save.reg
PUSH R1 --save.reg
PUSH R0 --save.reg
MOV R2,BP --BP+?
ADD R2,1 --L.loc
MOV R1,[R2] --Lid.fetch
MOV R0,R1 --arg.val
PUSH R0 --arg
MOV R2,BP --BP+?
ADD R2,3 --L.loc
MOV R1,[R2] --Lid.fetch
MOV R0,R1 --arg.val
PUSH R0 --arg
MOV R0,""
PUSH R0 --for.ret
CALL F1
POP R3 --result
POP R19 --args
POP R19 --args
POP R0 --old.regs
POP R1 --old.regs
POP R2 --old.regs
MOV [R2],R3 --Lasgn
PUSH R1 --save.reg
PUSH R0 --save.reg
MOV R0,BP --BP+?
ADD R0,1 --L.loc
MOV R2, "Read"
PUSH R2
MOV R2, -1
PUSH R2--(-1)
MOV R2, R0
PUSH R2--reg.addr
MOV R2, ""
PUSH R2--blank
PUSH R2--blank
CALL 0
POP R1--ret
POP R2--disc
POP R2--disc
POP R2--disc
POP R2--disc
POP R0 --old.regs
POP R1 --old.regs
JMP L9
L10:
PUSH R1 --save.reg
PUSH R0 --save.reg
MOV R0,"inorder" --str
MOV R2, "Write"
PUSH R2--"write"
MOV R2, -2
PUSH R2--(-2)
PUSH R0--data
MOV R2,""
PUSH R2--blank
PUSH R2--blank
CALL 0
POP R1--ret
POP R2--disc
POP R2--disc
POP R2--disc
POP R2--disc
POP R0 --old.regs
POP R1 --old.regs
MOV R2,0 --extra
PUSH R2 --save.reg
PUSH R1 --save.reg
PUSH R0 --save.reg
MOV R2,BP --BP+?
ADD R2,3 --L.loc
MOV R1,[R2] --Lid.fetch
MOV R0,R1 --arg.val
PUSH R0 --arg
MOV R0,""
PUSH R0 --for.ret
CALL F2
POP R3 --result
POP R19 --args
POP R0 --old.regs
POP R1 --old.regs
POP R2 --old.regs
MOV R4,4096 --Gbind
ADD R4,R2 --Goff
MOV [R4],R3 --Gasgn
PUSH R1 --save.reg
PUSH R0 --save.reg
MOV R0,"preorder" --str
MOV R2, "Write"
PUSH R2--"write"
MOV R2, -2
PUSH R2--(-2)
PUSH R0--data
MOV R2,""
PUSH R2--blank
PUSH R2--blank
CALL 0
POP R1--ret
POP R2--disc
POP R2--disc
POP R2--disc
POP R2--disc
POP R0 --old.regs
POP R1 --old.regs
MOV R2,0 --extra
PUSH R2 --save.reg
PUSH R1 --save.reg
PUSH R0 --save.reg
MOV R2,BP --BP+?
ADD R2,3 --L.loc
MOV R1,[R2] --Lid.fetch
MOV R0,R1 --arg.val
PUSH R0 --arg
MOV R0,""
PUSH R0 --for.ret
CALL F3
POP R3 --result
POP R19 --args
POP R0 --old.regs
POP R1 --old.regs
POP R2 --old.regs
MOV R4,4096 --Gbind
ADD R4,R2 --Goff
MOV [R4],R3 --Gasgn
PUSH R1 --save.reg
PUSH R0 --save.reg
MOV R0,"postorder" --str
MOV R2, "Write"
PUSH R2--"write"
MOV R2, -2
PUSH R2--(-2)
PUSH R0--data
MOV R2,""
PUSH R2--blank
PUSH R2--blank
CALL 0
POP R1--ret
POP R2--disc
POP R2--disc
POP R2--disc
POP R2--disc
POP R0 --old.regs
POP R1 --old.regs
MOV R2,0 --extra
PUSH R2 --save.reg
PUSH R1 --save.reg
PUSH R0 --save.reg
MOV R2,BP --BP+?
ADD R2,3 --L.loc
MOV R1,[R2] --Lid.fetch
MOV R0,R1 --arg.val
PUSH R0 --arg
MOV R0,""
PUSH R0 --for.ret
CALL F4
POP R3 --result
POP R19 --args
POP R0 --old.regs
POP R1 --old.regs
POP R2 --old.regs
MOV R4,4096 --Gbind
ADD R4,R2 --Goff
MOV [R4],R3 --Gasgn
POP R2 --locals
POP R2 --locals
POP R2 --locals
MOV R3,9 --num
MOV R2,BP
SUB R2,2 --(BP-2)
MOV [R2],R3 --sav.result
MOV BP,[SP] --old.bp
POP R2 --bp
RET
