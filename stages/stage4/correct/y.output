Terminals unused in grammar

   NL
   INC
   DEC
   BREAK
   CONTINUE
   REPEAT
   UNTIL


Grammar

    0 $accept: program $end

    1 program: Declarations main

    2 main: BEG Slist END ';'
    3     | BEG END

    4 Slist: Slist Stmt
    5      | Stmt

    6 Stmt: READ '(' ID ')' ';'
    7     | WRITE '(' expr ')' ';'
    8     | ID EQ expr ';'
    9     | IF '(' expr ')' THEN Slist ELSE Slist ENDIF ';'
   10     | IF '(' expr ')' THEN Slist ENDIF ';'
   11     | WHILE '(' expr ')' DO Slist ENDWHILE ';'

   12 Declarations: DECL DeclList ENDDECL ';'
   13             | DECL ENDDECL ';'

   14 DeclList: DeclList Decl
   15         | Decl

   16 Decl: Type Varlist ';'

   17 Type: INT
   18     | STR

   19 Varlist: Varlist ',' ID
   20        | ID

   21 expr: expr PLUS expr
   22     | expr MINUS expr
   23     | expr MUL expr
   24     | expr DIV expr
   25     | '(' expr ')'
   26     | NUM
   27     | ID
   28     | expr LT expr
   29     | expr LE expr
   30     | expr GT expr
   31     | expr GE expr
   32     | expr EE expr
   33     | expr NE expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 7 9 10 11 25
')' (41) 6 7 9 10 11 25
',' (44) 19
';' (59) 2 6 7 8 9 10 11 12 13 16
error (256)
NUM (258) 26
ID (259) 6 8 19 20 27
PLUS (260) 21
MINUS (261) 22
MUL (262) 23
DIV (263) 24
BEG (264) 2 3
END (265) 2 3
NL (266)
READ (267) 6
WRITE (268) 7
IF (269) 9 10
THEN (270) 9 10
ELSE (271) 9
ENDIF (272) 9 10
WHILE (273) 11
DO (274) 11
ENDWHILE (275) 11
LT (276) 28
LE (277) 29
GT (278) 30
GE (279) 31
EE (280) 32
NE (281) 33
INC (282)
DEC (283)
BREAK (284)
CONTINUE (285)
EQ (286) 8
REPEAT (287)
UNTIL (288)
DECL (289) 12 13
ENDDECL (290) 12 13
INT (291) 17
STR (292) 18


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1, on right: 0
main (44)
    on left: 2 3, on right: 1
Slist (45)
    on left: 4 5, on right: 2 4 9 10 11
Stmt (46)
    on left: 6 7 8 9 10 11, on right: 4 5
Declarations (47)
    on left: 12 13, on right: 1
DeclList (48)
    on left: 14 15, on right: 12 14
Decl (49)
    on left: 16, on right: 14 15
Type (50)
    on left: 17 18, on right: 16
Varlist (51)
    on left: 19 20, on right: 16 19
expr (52)
    on left: 21 22 23 24 25 26 27 28 29 30 31 32 33, on right: 7 8
    9 10 11 21 22 23 24 25 28 29 30 31 32 33


State 0

    0 $accept: . program $end

    DECL  shift, and go to state 1

    program       go to state 2
    Declarations  go to state 3


State 1

   12 Declarations: DECL . DeclList ENDDECL ';'
   13             | DECL . ENDDECL ';'

    ENDDECL  shift, and go to state 4
    INT      shift, and go to state 5
    STR      shift, and go to state 6

    DeclList  go to state 7
    Decl      go to state 8
    Type      go to state 9


State 2

    0 $accept: program . $end

    $end  shift, and go to state 10


State 3

    1 program: Declarations . main

    BEG  shift, and go to state 11

    main  go to state 12


State 4

   13 Declarations: DECL ENDDECL . ';'

    ';'  shift, and go to state 13


State 5

   17 Type: INT .

    $default  reduce using rule 17 (Type)


State 6

   18 Type: STR .

    $default  reduce using rule 18 (Type)


State 7

   12 Declarations: DECL DeclList . ENDDECL ';'
   14 DeclList: DeclList . Decl

    ENDDECL  shift, and go to state 14
    INT      shift, and go to state 5
    STR      shift, and go to state 6

    Decl  go to state 15
    Type  go to state 9


State 8

   15 DeclList: Decl .

    $default  reduce using rule 15 (DeclList)


State 9

   16 Decl: Type . Varlist ';'

    ID  shift, and go to state 16

    Varlist  go to state 17


State 10

    0 $accept: program $end .

    $default  accept


State 11

    2 main: BEG . Slist END ';'
    3     | BEG . END

    ID     shift, and go to state 18
    END    shift, and go to state 19
    READ   shift, and go to state 20
    WRITE  shift, and go to state 21
    IF     shift, and go to state 22
    WHILE  shift, and go to state 23

    Slist  go to state 24
    Stmt   go to state 25


State 12

    1 program: Declarations main .

    $default  reduce using rule 1 (program)


State 13

   13 Declarations: DECL ENDDECL ';' .

    $default  reduce using rule 13 (Declarations)


State 14

   12 Declarations: DECL DeclList ENDDECL . ';'

    ';'  shift, and go to state 26


State 15

   14 DeclList: DeclList Decl .

    $default  reduce using rule 14 (DeclList)


State 16

   20 Varlist: ID .

    $default  reduce using rule 20 (Varlist)


State 17

   16 Decl: Type Varlist . ';'
   19 Varlist: Varlist . ',' ID

    ';'  shift, and go to state 27
    ','  shift, and go to state 28


State 18

    8 Stmt: ID . EQ expr ';'

    EQ  shift, and go to state 29


State 19

    3 main: BEG END .

    $default  reduce using rule 3 (main)


State 20

    6 Stmt: READ . '(' ID ')' ';'

    '('  shift, and go to state 30


State 21

    7 Stmt: WRITE . '(' expr ')' ';'

    '('  shift, and go to state 31


State 22

    9 Stmt: IF . '(' expr ')' THEN Slist ELSE Slist ENDIF ';'
   10     | IF . '(' expr ')' THEN Slist ENDIF ';'

    '('  shift, and go to state 32


State 23

   11 Stmt: WHILE . '(' expr ')' DO Slist ENDWHILE ';'

    '('  shift, and go to state 33


State 24

    2 main: BEG Slist . END ';'
    4 Slist: Slist . Stmt

    ID     shift, and go to state 18
    END    shift, and go to state 34
    READ   shift, and go to state 20
    WRITE  shift, and go to state 21
    IF     shift, and go to state 22
    WHILE  shift, and go to state 23

    Stmt  go to state 35


State 25

    5 Slist: Stmt .

    $default  reduce using rule 5 (Slist)


State 26

   12 Declarations: DECL DeclList ENDDECL ';' .

    $default  reduce using rule 12 (Declarations)


State 27

   16 Decl: Type Varlist ';' .

    $default  reduce using rule 16 (Decl)


State 28

   19 Varlist: Varlist ',' . ID

    ID  shift, and go to state 36


State 29

    8 Stmt: ID EQ . expr ';'

    NUM  shift, and go to state 37
    ID   shift, and go to state 38
    '('  shift, and go to state 39

    expr  go to state 40


State 30

    6 Stmt: READ '(' . ID ')' ';'

    ID  shift, and go to state 41


State 31

    7 Stmt: WRITE '(' . expr ')' ';'

    NUM  shift, and go to state 37
    ID   shift, and go to state 38
    '('  shift, and go to state 39

    expr  go to state 42


State 32

    9 Stmt: IF '(' . expr ')' THEN Slist ELSE Slist ENDIF ';'
   10     | IF '(' . expr ')' THEN Slist ENDIF ';'

    NUM  shift, and go to state 37
    ID   shift, and go to state 38
    '('  shift, and go to state 39

    expr  go to state 43


State 33

   11 Stmt: WHILE '(' . expr ')' DO Slist ENDWHILE ';'

    NUM  shift, and go to state 37
    ID   shift, and go to state 38
    '('  shift, and go to state 39

    expr  go to state 44


State 34

    2 main: BEG Slist END . ';'

    ';'  shift, and go to state 45


State 35

    4 Slist: Slist Stmt .

    $default  reduce using rule 4 (Slist)


State 36

   19 Varlist: Varlist ',' ID .

    $default  reduce using rule 19 (Varlist)


State 37

   26 expr: NUM .

    $default  reduce using rule 26 (expr)


State 38

   27 expr: ID .

    $default  reduce using rule 27 (expr)


State 39

   25 expr: '(' . expr ')'

    NUM  shift, and go to state 37
    ID   shift, and go to state 38
    '('  shift, and go to state 39

    expr  go to state 46


State 40

    8 Stmt: ID EQ expr . ';'
   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   28     | expr . LT expr
   29     | expr . LE expr
   30     | expr . GT expr
   31     | expr . GE expr
   32     | expr . EE expr
   33     | expr . NE expr

    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    LT     shift, and go to state 51
    LE     shift, and go to state 52
    GT     shift, and go to state 53
    GE     shift, and go to state 54
    EE     shift, and go to state 55
    NE     shift, and go to state 56
    ';'    shift, and go to state 57


State 41

    6 Stmt: READ '(' ID . ')' ';'

    ')'  shift, and go to state 58


State 42

    7 Stmt: WRITE '(' expr . ')' ';'
   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   28     | expr . LT expr
   29     | expr . LE expr
   30     | expr . GT expr
   31     | expr . GE expr
   32     | expr . EE expr
   33     | expr . NE expr

    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    LT     shift, and go to state 51
    LE     shift, and go to state 52
    GT     shift, and go to state 53
    GE     shift, and go to state 54
    EE     shift, and go to state 55
    NE     shift, and go to state 56
    ')'    shift, and go to state 59


State 43

    9 Stmt: IF '(' expr . ')' THEN Slist ELSE Slist ENDIF ';'
   10     | IF '(' expr . ')' THEN Slist ENDIF ';'
   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   28     | expr . LT expr
   29     | expr . LE expr
   30     | expr . GT expr
   31     | expr . GE expr
   32     | expr . EE expr
   33     | expr . NE expr

    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    LT     shift, and go to state 51
    LE     shift, and go to state 52
    GT     shift, and go to state 53
    GE     shift, and go to state 54
    EE     shift, and go to state 55
    NE     shift, and go to state 56
    ')'    shift, and go to state 60


State 44

   11 Stmt: WHILE '(' expr . ')' DO Slist ENDWHILE ';'
   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   28     | expr . LT expr
   29     | expr . LE expr
   30     | expr . GT expr
   31     | expr . GE expr
   32     | expr . EE expr
   33     | expr . NE expr

    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    LT     shift, and go to state 51
    LE     shift, and go to state 52
    GT     shift, and go to state 53
    GE     shift, and go to state 54
    EE     shift, and go to state 55
    NE     shift, and go to state 56
    ')'    shift, and go to state 61


State 45

    2 main: BEG Slist END ';' .

    $default  reduce using rule 2 (main)


State 46

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   25     | '(' expr . ')'
   28     | expr . LT expr
   29     | expr . LE expr
   30     | expr . GT expr
   31     | expr . GE expr
   32     | expr . EE expr
   33     | expr . NE expr

    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    LT     shift, and go to state 51
    LE     shift, and go to state 52
    GT     shift, and go to state 53
    GE     shift, and go to state 54
    EE     shift, and go to state 55
    NE     shift, and go to state 56
    ')'    shift, and go to state 62


State 47

   21 expr: expr PLUS . expr

    NUM  shift, and go to state 37
    ID   shift, and go to state 38
    '('  shift, and go to state 39

    expr  go to state 63


State 48

   22 expr: expr MINUS . expr

    NUM  shift, and go to state 37
    ID   shift, and go to state 38
    '('  shift, and go to state 39

    expr  go to state 64


State 49

   23 expr: expr MUL . expr

    NUM  shift, and go to state 37
    ID   shift, and go to state 38
    '('  shift, and go to state 39

    expr  go to state 65


State 50

   24 expr: expr DIV . expr

    NUM  shift, and go to state 37
    ID   shift, and go to state 38
    '('  shift, and go to state 39

    expr  go to state 66


State 51

   28 expr: expr LT . expr

    NUM  shift, and go to state 37
    ID   shift, and go to state 38
    '('  shift, and go to state 39

    expr  go to state 67


State 52

   29 expr: expr LE . expr

    NUM  shift, and go to state 37
    ID   shift, and go to state 38
    '('  shift, and go to state 39

    expr  go to state 68


State 53

   30 expr: expr GT . expr

    NUM  shift, and go to state 37
    ID   shift, and go to state 38
    '('  shift, and go to state 39

    expr  go to state 69


State 54

   31 expr: expr GE . expr

    NUM  shift, and go to state 37
    ID   shift, and go to state 38
    '('  shift, and go to state 39

    expr  go to state 70


State 55

   32 expr: expr EE . expr

    NUM  shift, and go to state 37
    ID   shift, and go to state 38
    '('  shift, and go to state 39

    expr  go to state 71


State 56

   33 expr: expr NE . expr

    NUM  shift, and go to state 37
    ID   shift, and go to state 38
    '('  shift, and go to state 39

    expr  go to state 72


State 57

    8 Stmt: ID EQ expr ';' .

    $default  reduce using rule 8 (Stmt)


State 58

    6 Stmt: READ '(' ID ')' . ';'

    ';'  shift, and go to state 73


State 59

    7 Stmt: WRITE '(' expr ')' . ';'

    ';'  shift, and go to state 74


State 60

    9 Stmt: IF '(' expr ')' . THEN Slist ELSE Slist ENDIF ';'
   10     | IF '(' expr ')' . THEN Slist ENDIF ';'

    THEN  shift, and go to state 75


State 61

   11 Stmt: WHILE '(' expr ')' . DO Slist ENDWHILE ';'

    DO  shift, and go to state 76


State 62

   25 expr: '(' expr ')' .

    $default  reduce using rule 25 (expr)


State 63

   21 expr: expr . PLUS expr
   21     | expr PLUS expr .
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   28     | expr . LT expr
   29     | expr . LE expr
   30     | expr . GT expr
   31     | expr . GE expr
   32     | expr . EE expr
   33     | expr . NE expr

    MUL  shift, and go to state 49
    DIV  shift, and go to state 50
    LT   shift, and go to state 51
    LE   shift, and go to state 52
    GT   shift, and go to state 53
    GE   shift, and go to state 54
    EE   shift, and go to state 55
    NE   shift, and go to state 56

    $default  reduce using rule 21 (expr)


State 64

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   22     | expr MINUS expr .
   23     | expr . MUL expr
   24     | expr . DIV expr
   28     | expr . LT expr
   29     | expr . LE expr
   30     | expr . GT expr
   31     | expr . GE expr
   32     | expr . EE expr
   33     | expr . NE expr

    MUL  shift, and go to state 49
    DIV  shift, and go to state 50
    LT   shift, and go to state 51
    LE   shift, and go to state 52
    GT   shift, and go to state 53
    GE   shift, and go to state 54
    EE   shift, and go to state 55
    NE   shift, and go to state 56

    $default  reduce using rule 22 (expr)


State 65

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   23     | expr MUL expr .
   24     | expr . DIV expr
   28     | expr . LT expr
   29     | expr . LE expr
   30     | expr . GT expr
   31     | expr . GE expr
   32     | expr . EE expr
   33     | expr . NE expr

    LT  shift, and go to state 51
    LE  shift, and go to state 52
    GT  shift, and go to state 53
    GE  shift, and go to state 54
    EE  shift, and go to state 55
    NE  shift, and go to state 56

    $default  reduce using rule 23 (expr)


State 66

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   24     | expr DIV expr .
   28     | expr . LT expr
   29     | expr . LE expr
   30     | expr . GT expr
   31     | expr . GE expr
   32     | expr . EE expr
   33     | expr . NE expr

    LT  shift, and go to state 51
    LE  shift, and go to state 52
    GT  shift, and go to state 53
    GE  shift, and go to state 54
    EE  shift, and go to state 55
    NE  shift, and go to state 56

    $default  reduce using rule 24 (expr)


State 67

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   28     | expr . LT expr
   28     | expr LT expr .
   29     | expr . LE expr
   30     | expr . GT expr
   31     | expr . GE expr
   32     | expr . EE expr
   33     | expr . NE expr

    LT  error (nonassociative)
    LE  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)
    EE  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 28 (expr)


State 68

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   28     | expr . LT expr
   29     | expr . LE expr
   29     | expr LE expr .
   30     | expr . GT expr
   31     | expr . GE expr
   32     | expr . EE expr
   33     | expr . NE expr

    LT  error (nonassociative)
    LE  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)
    EE  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 29 (expr)


State 69

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   28     | expr . LT expr
   29     | expr . LE expr
   30     | expr . GT expr
   30     | expr GT expr .
   31     | expr . GE expr
   32     | expr . EE expr
   33     | expr . NE expr

    LT  error (nonassociative)
    LE  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)
    EE  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 30 (expr)


State 70

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   28     | expr . LT expr
   29     | expr . LE expr
   30     | expr . GT expr
   31     | expr . GE expr
   31     | expr GE expr .
   32     | expr . EE expr
   33     | expr . NE expr

    LT  error (nonassociative)
    LE  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)
    EE  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 31 (expr)


State 71

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   28     | expr . LT expr
   29     | expr . LE expr
   30     | expr . GT expr
   31     | expr . GE expr
   32     | expr . EE expr
   32     | expr EE expr .
   33     | expr . NE expr

    LT  error (nonassociative)
    LE  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)
    EE  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 32 (expr)


State 72

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . MUL expr
   24     | expr . DIV expr
   28     | expr . LT expr
   29     | expr . LE expr
   30     | expr . GT expr
   31     | expr . GE expr
   32     | expr . EE expr
   33     | expr . NE expr
   33     | expr NE expr .

    LT  error (nonassociative)
    LE  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)
    EE  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 33 (expr)


State 73

    6 Stmt: READ '(' ID ')' ';' .

    $default  reduce using rule 6 (Stmt)


State 74

    7 Stmt: WRITE '(' expr ')' ';' .

    $default  reduce using rule 7 (Stmt)


State 75

    9 Stmt: IF '(' expr ')' THEN . Slist ELSE Slist ENDIF ';'
   10     | IF '(' expr ')' THEN . Slist ENDIF ';'

    ID     shift, and go to state 18
    READ   shift, and go to state 20
    WRITE  shift, and go to state 21
    IF     shift, and go to state 22
    WHILE  shift, and go to state 23

    Slist  go to state 77
    Stmt   go to state 25


State 76

   11 Stmt: WHILE '(' expr ')' DO . Slist ENDWHILE ';'

    ID     shift, and go to state 18
    READ   shift, and go to state 20
    WRITE  shift, and go to state 21
    IF     shift, and go to state 22
    WHILE  shift, and go to state 23

    Slist  go to state 78
    Stmt   go to state 25


State 77

    4 Slist: Slist . Stmt
    9 Stmt: IF '(' expr ')' THEN Slist . ELSE Slist ENDIF ';'
   10     | IF '(' expr ')' THEN Slist . ENDIF ';'

    ID     shift, and go to state 18
    READ   shift, and go to state 20
    WRITE  shift, and go to state 21
    IF     shift, and go to state 22
    ELSE   shift, and go to state 79
    ENDIF  shift, and go to state 80
    WHILE  shift, and go to state 23

    Stmt  go to state 35


State 78

    4 Slist: Slist . Stmt
   11 Stmt: WHILE '(' expr ')' DO Slist . ENDWHILE ';'

    ID        shift, and go to state 18
    READ      shift, and go to state 20
    WRITE     shift, and go to state 21
    IF        shift, and go to state 22
    WHILE     shift, and go to state 23
    ENDWHILE  shift, and go to state 81

    Stmt  go to state 35


State 79

    9 Stmt: IF '(' expr ')' THEN Slist ELSE . Slist ENDIF ';'

    ID     shift, and go to state 18
    READ   shift, and go to state 20
    WRITE  shift, and go to state 21
    IF     shift, and go to state 22
    WHILE  shift, and go to state 23

    Slist  go to state 82
    Stmt   go to state 25


State 80

   10 Stmt: IF '(' expr ')' THEN Slist ENDIF . ';'

    ';'  shift, and go to state 83


State 81

   11 Stmt: WHILE '(' expr ')' DO Slist ENDWHILE . ';'

    ';'  shift, and go to state 84


State 82

    4 Slist: Slist . Stmt
    9 Stmt: IF '(' expr ')' THEN Slist ELSE Slist . ENDIF ';'

    ID     shift, and go to state 18
    READ   shift, and go to state 20
    WRITE  shift, and go to state 21
    IF     shift, and go to state 22
    ENDIF  shift, and go to state 85
    WHILE  shift, and go to state 23

    Stmt  go to state 35


State 83

   10 Stmt: IF '(' expr ')' THEN Slist ENDIF ';' .

    $default  reduce using rule 10 (Stmt)


State 84

   11 Stmt: WHILE '(' expr ')' DO Slist ENDWHILE ';' .

    $default  reduce using rule 11 (Stmt)


State 85

    9 Stmt: IF '(' expr ')' THEN Slist ELSE Slist ENDIF . ';'

    ';'  shift, and go to state 86


State 86

    9 Stmt: IF '(' expr ')' THEN Slist ELSE Slist ENDIF ';' .

    $default  reduce using rule 9 (Stmt)
