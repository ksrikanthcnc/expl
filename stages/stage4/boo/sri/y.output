Grammar

    0 $accept: program $end

    1 program: Declarations main

    2 main: BEG Slist END ';'
    3     | BEG END ';'

    4 Slist: Slist Stmt
    5      | Stmt

    6 Stmt: READ '(' ID ')' ';'
    7     | WRITE '(' E ')' ';'
    8     | ID EQ E ';'
    9     | IF '(' E ')' THEN Slist ELSE Slist ENDIF ';'
   10     | IF '(' E ')' THEN Slist ENDIF ';'
   11     | WHILE '(' E ')' DO Slist ENDWHILE ';'
   12     | REPEAT Slist UNTIL '(' E ')' ';'
   13     | DO Slist WHILE '(' E ')' ';'
   14     | BREAK ';'
   15     | CONTINUE ';'

   16 E: E PLUS E
   17  | E MINUS E
   18  | E MUL E
   19  | E DIV E
   20  | '(' E ')'
   21  | ID
   22  | NUM
   23  | E LT E
   24  | E GT E
   25  | E LE E
   26  | E GE E
   27  | E NE E
   28  | E EE E

   29 Declarations: DECL DeclList ENDDECL ';'
   30             | DECL ENDDECL ';'

   31 DeclList: DeclList Decl
   32         | Decl

   33 Decl: Type Varlist ';'

   34 Type: INT
   35     | STR

   36 Varlist: Varlist ',' ID
   37        | ID


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 7 9 10 11 12 13 20
')' (41) 6 7 9 10 11 12 13 20
',' (44) 36
';' (59) 2 3 6 7 8 9 10 11 12 13 14 15 29 30 33
error (256)
NUM (258) 22
ID (259) 6 8 21 36 37
PLUS (260) 16
MINUS (261) 17
MUL (262) 18
DIV (263) 19
EQ (264) 8
LT (265) 23
GT (266) 24
LE (267) 25
GE (268) 26
NE (269) 27
EE (270) 28
BEG (271) 2 3
END (272) 2 3
READ (273) 6
WRITE (274) 7
IF (275) 9 10
THEN (276) 9 10
ELSE (277) 9
ENDIF (278) 9 10
WHILE (279) 11 13
DO (280) 11 13
ENDWHILE (281) 11
BREAK (282) 14
CONTINUE (283) 15
REPEAT (284) 12
UNTIL (285) 12
DECL (286) 29 30
ENDDECL (287) 29 30
INT (288) 34
STR (289) 35


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
program (40)
    on left: 1, on right: 0
main (41)
    on left: 2 3, on right: 1
Slist (42)
    on left: 4 5, on right: 2 4 9 10 11 12 13
Stmt (43)
    on left: 6 7 8 9 10 11 12 13 14 15, on right: 4 5
E (44)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28, on right: 7 8
    9 10 11 12 13 16 17 18 19 20 23 24 25 26 27 28
Declarations (45)
    on left: 29 30, on right: 1
DeclList (46)
    on left: 31 32, on right: 29 31
Decl (47)
    on left: 33, on right: 31 32
Type (48)
    on left: 34 35, on right: 33
Varlist (49)
    on left: 36 37, on right: 33 36


State 0

    0 $accept: . program $end

    DECL  shift, and go to state 1

    program       go to state 2
    Declarations  go to state 3


State 1

   29 Declarations: DECL . DeclList ENDDECL ';'
   30             | DECL . ENDDECL ';'

    ENDDECL  shift, and go to state 4
    INT      shift, and go to state 5
    STR      shift, and go to state 6

    DeclList  go to state 7
    Decl      go to state 8
    Type      go to state 9


State 2

    0 $accept: program . $end

    $end  shift, and go to state 10


State 3

    1 program: Declarations . main

    BEG  shift, and go to state 11

    main  go to state 12


State 4

   30 Declarations: DECL ENDDECL . ';'

    ';'  shift, and go to state 13


State 5

   34 Type: INT .

    $default  reduce using rule 34 (Type)


State 6

   35 Type: STR .

    $default  reduce using rule 35 (Type)


State 7

   29 Declarations: DECL DeclList . ENDDECL ';'
   31 DeclList: DeclList . Decl

    ENDDECL  shift, and go to state 14
    INT      shift, and go to state 5
    STR      shift, and go to state 6

    Decl  go to state 15
    Type  go to state 9


State 8

   32 DeclList: Decl .

    $default  reduce using rule 32 (DeclList)


State 9

   33 Decl: Type . Varlist ';'

    ID  shift, and go to state 16

    Varlist  go to state 17


State 10

    0 $accept: program $end .

    $default  accept


State 11

    2 main: BEG . Slist END ';'
    3     | BEG . END ';'

    ID        shift, and go to state 18
    END       shift, and go to state 19
    READ      shift, and go to state 20
    WRITE     shift, and go to state 21
    IF        shift, and go to state 22
    WHILE     shift, and go to state 23
    DO        shift, and go to state 24
    BREAK     shift, and go to state 25
    CONTINUE  shift, and go to state 26
    REPEAT    shift, and go to state 27

    Slist  go to state 28
    Stmt   go to state 29


State 12

    1 program: Declarations main .

    $default  reduce using rule 1 (program)


State 13

   30 Declarations: DECL ENDDECL ';' .

    $default  reduce using rule 30 (Declarations)


State 14

   29 Declarations: DECL DeclList ENDDECL . ';'

    ';'  shift, and go to state 30


State 15

   31 DeclList: DeclList Decl .

    $default  reduce using rule 31 (DeclList)


State 16

   37 Varlist: ID .

    $default  reduce using rule 37 (Varlist)


State 17

   33 Decl: Type Varlist . ';'
   36 Varlist: Varlist . ',' ID

    ';'  shift, and go to state 31
    ','  shift, and go to state 32


State 18

    8 Stmt: ID . EQ E ';'

    EQ  shift, and go to state 33


State 19

    3 main: BEG END . ';'

    ';'  shift, and go to state 34


State 20

    6 Stmt: READ . '(' ID ')' ';'

    '('  shift, and go to state 35


State 21

    7 Stmt: WRITE . '(' E ')' ';'

    '('  shift, and go to state 36


State 22

    9 Stmt: IF . '(' E ')' THEN Slist ELSE Slist ENDIF ';'
   10     | IF . '(' E ')' THEN Slist ENDIF ';'

    '('  shift, and go to state 37


State 23

   11 Stmt: WHILE . '(' E ')' DO Slist ENDWHILE ';'

    '('  shift, and go to state 38


State 24

   13 Stmt: DO . Slist WHILE '(' E ')' ';'

    ID        shift, and go to state 18
    READ      shift, and go to state 20
    WRITE     shift, and go to state 21
    IF        shift, and go to state 22
    WHILE     shift, and go to state 23
    DO        shift, and go to state 24
    BREAK     shift, and go to state 25
    CONTINUE  shift, and go to state 26
    REPEAT    shift, and go to state 27

    Slist  go to state 39
    Stmt   go to state 29


State 25

   14 Stmt: BREAK . ';'

    ';'  shift, and go to state 40


State 26

   15 Stmt: CONTINUE . ';'

    ';'  shift, and go to state 41


State 27

   12 Stmt: REPEAT . Slist UNTIL '(' E ')' ';'

    ID        shift, and go to state 18
    READ      shift, and go to state 20
    WRITE     shift, and go to state 21
    IF        shift, and go to state 22
    WHILE     shift, and go to state 23
    DO        shift, and go to state 24
    BREAK     shift, and go to state 25
    CONTINUE  shift, and go to state 26
    REPEAT    shift, and go to state 27

    Slist  go to state 42
    Stmt   go to state 29


State 28

    2 main: BEG Slist . END ';'
    4 Slist: Slist . Stmt

    ID        shift, and go to state 18
    END       shift, and go to state 43
    READ      shift, and go to state 20
    WRITE     shift, and go to state 21
    IF        shift, and go to state 22
    WHILE     shift, and go to state 23
    DO        shift, and go to state 24
    BREAK     shift, and go to state 25
    CONTINUE  shift, and go to state 26
    REPEAT    shift, and go to state 27

    Stmt  go to state 44


State 29

    5 Slist: Stmt .

    $default  reduce using rule 5 (Slist)


State 30

   29 Declarations: DECL DeclList ENDDECL ';' .

    $default  reduce using rule 29 (Declarations)


State 31

   33 Decl: Type Varlist ';' .

    $default  reduce using rule 33 (Decl)


State 32

   36 Varlist: Varlist ',' . ID

    ID  shift, and go to state 45


State 33

    8 Stmt: ID EQ . E ';'

    NUM  shift, and go to state 46
    ID   shift, and go to state 47
    '('  shift, and go to state 48

    E  go to state 49


State 34

    3 main: BEG END ';' .

    $default  reduce using rule 3 (main)


State 35

    6 Stmt: READ '(' . ID ')' ';'

    ID  shift, and go to state 50


State 36

    7 Stmt: WRITE '(' . E ')' ';'

    NUM  shift, and go to state 46
    ID   shift, and go to state 47
    '('  shift, and go to state 48

    E  go to state 51


State 37

    9 Stmt: IF '(' . E ')' THEN Slist ELSE Slist ENDIF ';'
   10     | IF '(' . E ')' THEN Slist ENDIF ';'

    NUM  shift, and go to state 46
    ID   shift, and go to state 47
    '('  shift, and go to state 48

    E  go to state 52


State 38

   11 Stmt: WHILE '(' . E ')' DO Slist ENDWHILE ';'

    NUM  shift, and go to state 46
    ID   shift, and go to state 47
    '('  shift, and go to state 48

    E  go to state 53


State 39

    4 Slist: Slist . Stmt
   13 Stmt: DO Slist . WHILE '(' E ')' ';'

    ID        shift, and go to state 18
    READ      shift, and go to state 20
    WRITE     shift, and go to state 21
    IF        shift, and go to state 22
    WHILE     shift, and go to state 54
    DO        shift, and go to state 24
    BREAK     shift, and go to state 25
    CONTINUE  shift, and go to state 26
    REPEAT    shift, and go to state 27

    Stmt  go to state 44


State 40

   14 Stmt: BREAK ';' .

    $default  reduce using rule 14 (Stmt)


State 41

   15 Stmt: CONTINUE ';' .

    $default  reduce using rule 15 (Stmt)


State 42

    4 Slist: Slist . Stmt
   12 Stmt: REPEAT Slist . UNTIL '(' E ')' ';'

    ID        shift, and go to state 18
    READ      shift, and go to state 20
    WRITE     shift, and go to state 21
    IF        shift, and go to state 22
    WHILE     shift, and go to state 23
    DO        shift, and go to state 24
    BREAK     shift, and go to state 25
    CONTINUE  shift, and go to state 26
    REPEAT    shift, and go to state 27
    UNTIL     shift, and go to state 55

    Stmt  go to state 44


State 43

    2 main: BEG Slist END . ';'

    ';'  shift, and go to state 56


State 44

    4 Slist: Slist Stmt .

    $default  reduce using rule 4 (Slist)


State 45

   36 Varlist: Varlist ',' ID .

    $default  reduce using rule 36 (Varlist)


State 46

   22 E: NUM .

    $default  reduce using rule 22 (E)


State 47

   21 E: ID .

    $default  reduce using rule 21 (E)


State 48

   20 E: '(' . E ')'

    NUM  shift, and go to state 46
    ID   shift, and go to state 47
    '('  shift, and go to state 48

    E  go to state 57


State 49

    8 Stmt: ID EQ E . ';'
   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 58
    MINUS  shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61
    LT     shift, and go to state 62
    GT     shift, and go to state 63
    LE     shift, and go to state 64
    GE     shift, and go to state 65
    NE     shift, and go to state 66
    EE     shift, and go to state 67
    ';'    shift, and go to state 68


State 50

    6 Stmt: READ '(' ID . ')' ';'

    ')'  shift, and go to state 69


State 51

    7 Stmt: WRITE '(' E . ')' ';'
   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 58
    MINUS  shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61
    LT     shift, and go to state 62
    GT     shift, and go to state 63
    LE     shift, and go to state 64
    GE     shift, and go to state 65
    NE     shift, and go to state 66
    EE     shift, and go to state 67
    ')'    shift, and go to state 70


State 52

    9 Stmt: IF '(' E . ')' THEN Slist ELSE Slist ENDIF ';'
   10     | IF '(' E . ')' THEN Slist ENDIF ';'
   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 58
    MINUS  shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61
    LT     shift, and go to state 62
    GT     shift, and go to state 63
    LE     shift, and go to state 64
    GE     shift, and go to state 65
    NE     shift, and go to state 66
    EE     shift, and go to state 67
    ')'    shift, and go to state 71


State 53

   11 Stmt: WHILE '(' E . ')' DO Slist ENDWHILE ';'
   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 58
    MINUS  shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61
    LT     shift, and go to state 62
    GT     shift, and go to state 63
    LE     shift, and go to state 64
    GE     shift, and go to state 65
    NE     shift, and go to state 66
    EE     shift, and go to state 67
    ')'    shift, and go to state 72


State 54

   11 Stmt: WHILE . '(' E ')' DO Slist ENDWHILE ';'
   13     | DO Slist WHILE . '(' E ')' ';'

    '('  shift, and go to state 73


State 55

   12 Stmt: REPEAT Slist UNTIL . '(' E ')' ';'

    '('  shift, and go to state 74


State 56

    2 main: BEG Slist END ';' .

    $default  reduce using rule 2 (main)


State 57

   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   20  | '(' E . ')'
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 58
    MINUS  shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61
    LT     shift, and go to state 62
    GT     shift, and go to state 63
    LE     shift, and go to state 64
    GE     shift, and go to state 65
    NE     shift, and go to state 66
    EE     shift, and go to state 67
    ')'    shift, and go to state 75


State 58

   16 E: E PLUS . E

    NUM  shift, and go to state 46
    ID   shift, and go to state 47
    '('  shift, and go to state 48

    E  go to state 76


State 59

   17 E: E MINUS . E

    NUM  shift, and go to state 46
    ID   shift, and go to state 47
    '('  shift, and go to state 48

    E  go to state 77


State 60

   18 E: E MUL . E

    NUM  shift, and go to state 46
    ID   shift, and go to state 47
    '('  shift, and go to state 48

    E  go to state 78


State 61

   19 E: E DIV . E

    NUM  shift, and go to state 46
    ID   shift, and go to state 47
    '('  shift, and go to state 48

    E  go to state 79


State 62

   23 E: E LT . E

    NUM  shift, and go to state 46
    ID   shift, and go to state 47
    '('  shift, and go to state 48

    E  go to state 80


State 63

   24 E: E GT . E

    NUM  shift, and go to state 46
    ID   shift, and go to state 47
    '('  shift, and go to state 48

    E  go to state 81


State 64

   25 E: E LE . E

    NUM  shift, and go to state 46
    ID   shift, and go to state 47
    '('  shift, and go to state 48

    E  go to state 82


State 65

   26 E: E GE . E

    NUM  shift, and go to state 46
    ID   shift, and go to state 47
    '('  shift, and go to state 48

    E  go to state 83


State 66

   27 E: E NE . E

    NUM  shift, and go to state 46
    ID   shift, and go to state 47
    '('  shift, and go to state 48

    E  go to state 84


State 67

   28 E: E EE . E

    NUM  shift, and go to state 46
    ID   shift, and go to state 47
    '('  shift, and go to state 48

    E  go to state 85


State 68

    8 Stmt: ID EQ E ';' .

    $default  reduce using rule 8 (Stmt)


State 69

    6 Stmt: READ '(' ID ')' . ';'

    ';'  shift, and go to state 86


State 70

    7 Stmt: WRITE '(' E ')' . ';'

    ';'  shift, and go to state 87


State 71

    9 Stmt: IF '(' E ')' . THEN Slist ELSE Slist ENDIF ';'
   10     | IF '(' E ')' . THEN Slist ENDIF ';'

    THEN  shift, and go to state 88


State 72

   11 Stmt: WHILE '(' E ')' . DO Slist ENDWHILE ';'

    DO  shift, and go to state 89


State 73

   11 Stmt: WHILE '(' . E ')' DO Slist ENDWHILE ';'
   13     | DO Slist WHILE '(' . E ')' ';'

    NUM  shift, and go to state 46
    ID   shift, and go to state 47
    '('  shift, and go to state 48

    E  go to state 90


State 74

   12 Stmt: REPEAT Slist UNTIL '(' . E ')' ';'

    NUM  shift, and go to state 46
    ID   shift, and go to state 47
    '('  shift, and go to state 48

    E  go to state 91


State 75

   20 E: '(' E ')' .

    $default  reduce using rule 20 (E)


State 76

   16 E: E . PLUS E
   16  | E PLUS E .
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    MUL  shift, and go to state 60
    DIV  shift, and go to state 61

    $default  reduce using rule 16 (E)


State 77

   16 E: E . PLUS E
   17  | E . MINUS E
   17  | E MINUS E .
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    MUL  shift, and go to state 60
    DIV  shift, and go to state 61

    $default  reduce using rule 17 (E)


State 78

   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   18  | E MUL E .
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    $default  reduce using rule 18 (E)


State 79

   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   19  | E DIV E .
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    $default  reduce using rule 19 (E)


State 80

   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   23  | E LT E .
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 58
    MINUS  shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EE  error (nonassociative)

    $default  reduce using rule 23 (E)


State 81

   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   24  | E GT E .
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 58
    MINUS  shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EE  error (nonassociative)

    $default  reduce using rule 24 (E)


State 82

   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   25  | E LE E .
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 58
    MINUS  shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EE  error (nonassociative)

    $default  reduce using rule 25 (E)


State 83

   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   26  | E GE E .
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 58
    MINUS  shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EE  error (nonassociative)

    $default  reduce using rule 26 (E)


State 84

   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   27  | E NE E .
   28  | E . EE E

    PLUS   shift, and go to state 58
    MINUS  shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EE  error (nonassociative)

    $default  reduce using rule 27 (E)


State 85

   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E
   28  | E EE E .

    PLUS   shift, and go to state 58
    MINUS  shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EE  error (nonassociative)

    $default  reduce using rule 28 (E)


State 86

    6 Stmt: READ '(' ID ')' ';' .

    $default  reduce using rule 6 (Stmt)


State 87

    7 Stmt: WRITE '(' E ')' ';' .

    $default  reduce using rule 7 (Stmt)


State 88

    9 Stmt: IF '(' E ')' THEN . Slist ELSE Slist ENDIF ';'
   10     | IF '(' E ')' THEN . Slist ENDIF ';'

    ID        shift, and go to state 18
    READ      shift, and go to state 20
    WRITE     shift, and go to state 21
    IF        shift, and go to state 22
    WHILE     shift, and go to state 23
    DO        shift, and go to state 24
    BREAK     shift, and go to state 25
    CONTINUE  shift, and go to state 26
    REPEAT    shift, and go to state 27

    Slist  go to state 92
    Stmt   go to state 29


State 89

   11 Stmt: WHILE '(' E ')' DO . Slist ENDWHILE ';'

    ID        shift, and go to state 18
    READ      shift, and go to state 20
    WRITE     shift, and go to state 21
    IF        shift, and go to state 22
    WHILE     shift, and go to state 23
    DO        shift, and go to state 24
    BREAK     shift, and go to state 25
    CONTINUE  shift, and go to state 26
    REPEAT    shift, and go to state 27

    Slist  go to state 93
    Stmt   go to state 29


State 90

   11 Stmt: WHILE '(' E . ')' DO Slist ENDWHILE ';'
   13     | DO Slist WHILE '(' E . ')' ';'
   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 58
    MINUS  shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61
    LT     shift, and go to state 62
    GT     shift, and go to state 63
    LE     shift, and go to state 64
    GE     shift, and go to state 65
    NE     shift, and go to state 66
    EE     shift, and go to state 67
    ')'    shift, and go to state 94


State 91

   12 Stmt: REPEAT Slist UNTIL '(' E . ')' ';'
   16 E: E . PLUS E
   17  | E . MINUS E
   18  | E . MUL E
   19  | E . DIV E
   23  | E . LT E
   24  | E . GT E
   25  | E . LE E
   26  | E . GE E
   27  | E . NE E
   28  | E . EE E

    PLUS   shift, and go to state 58
    MINUS  shift, and go to state 59
    MUL    shift, and go to state 60
    DIV    shift, and go to state 61
    LT     shift, and go to state 62
    GT     shift, and go to state 63
    LE     shift, and go to state 64
    GE     shift, and go to state 65
    NE     shift, and go to state 66
    EE     shift, and go to state 67
    ')'    shift, and go to state 95


State 92

    4 Slist: Slist . Stmt
    9 Stmt: IF '(' E ')' THEN Slist . ELSE Slist ENDIF ';'
   10     | IF '(' E ')' THEN Slist . ENDIF ';'

    ID        shift, and go to state 18
    READ      shift, and go to state 20
    WRITE     shift, and go to state 21
    IF        shift, and go to state 22
    ELSE      shift, and go to state 96
    ENDIF     shift, and go to state 97
    WHILE     shift, and go to state 23
    DO        shift, and go to state 24
    BREAK     shift, and go to state 25
    CONTINUE  shift, and go to state 26
    REPEAT    shift, and go to state 27

    Stmt  go to state 44


State 93

    4 Slist: Slist . Stmt
   11 Stmt: WHILE '(' E ')' DO Slist . ENDWHILE ';'

    ID        shift, and go to state 18
    READ      shift, and go to state 20
    WRITE     shift, and go to state 21
    IF        shift, and go to state 22
    WHILE     shift, and go to state 23
    DO        shift, and go to state 24
    ENDWHILE  shift, and go to state 98
    BREAK     shift, and go to state 25
    CONTINUE  shift, and go to state 26
    REPEAT    shift, and go to state 27

    Stmt  go to state 44


State 94

   11 Stmt: WHILE '(' E ')' . DO Slist ENDWHILE ';'
   13     | DO Slist WHILE '(' E ')' . ';'

    DO   shift, and go to state 89
    ';'  shift, and go to state 99


State 95

   12 Stmt: REPEAT Slist UNTIL '(' E ')' . ';'

    ';'  shift, and go to state 100


State 96

    9 Stmt: IF '(' E ')' THEN Slist ELSE . Slist ENDIF ';'

    ID        shift, and go to state 18
    READ      shift, and go to state 20
    WRITE     shift, and go to state 21
    IF        shift, and go to state 22
    WHILE     shift, and go to state 23
    DO        shift, and go to state 24
    BREAK     shift, and go to state 25
    CONTINUE  shift, and go to state 26
    REPEAT    shift, and go to state 27

    Slist  go to state 101
    Stmt   go to state 29


State 97

   10 Stmt: IF '(' E ')' THEN Slist ENDIF . ';'

    ';'  shift, and go to state 102


State 98

   11 Stmt: WHILE '(' E ')' DO Slist ENDWHILE . ';'

    ';'  shift, and go to state 103


State 99

   13 Stmt: DO Slist WHILE '(' E ')' ';' .

    $default  reduce using rule 13 (Stmt)


State 100

   12 Stmt: REPEAT Slist UNTIL '(' E ')' ';' .

    $default  reduce using rule 12 (Stmt)


State 101

    4 Slist: Slist . Stmt
    9 Stmt: IF '(' E ')' THEN Slist ELSE Slist . ENDIF ';'

    ID        shift, and go to state 18
    READ      shift, and go to state 20
    WRITE     shift, and go to state 21
    IF        shift, and go to state 22
    ENDIF     shift, and go to state 104
    WHILE     shift, and go to state 23
    DO        shift, and go to state 24
    BREAK     shift, and go to state 25
    CONTINUE  shift, and go to state 26
    REPEAT    shift, and go to state 27

    Stmt  go to state 44


State 102

   10 Stmt: IF '(' E ')' THEN Slist ENDIF ';' .

    $default  reduce using rule 10 (Stmt)


State 103

   11 Stmt: WHILE '(' E ')' DO Slist ENDWHILE ';' .

    $default  reduce using rule 11 (Stmt)


State 104

    9 Stmt: IF '(' E ')' THEN Slist ELSE Slist ENDIF . ';'

    ';'  shift, and go to state 105


State 105

    9 Stmt: IF '(' E ')' THEN Slist ELSE Slist ENDIF ';' .

    $default  reduce using rule 9 (Stmt)
