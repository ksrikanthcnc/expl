fstate 8Terminals unused in grammar

   INC
   DEC
   BREAK
   CONTINUE
   REPEAT
   UNTIL


State 85 conflicts: 1 shift/reduce
State 86 conflicts: 1 shift/reduce
State 87 conflicts: 1 shift/reduce
State 88 conflicts: 1 shift/reduce
State 89 conflicts: 5 shift/reduce


Grammar

    0 $accept: start $end

    1 start: Declarations main

    2 Declarations: DECL DeclList ENDDECL ';'
    3             | DECL ENDDECL ';'

    4 DeclList: DeclList Decl
    5         | Decl

    6 Decl: Type Varlist ';'

    7 Type: INT
    8     | STR

    9 Varlist: Varlist ',' declid
   10        | declid

   11 declid: ID
   12       | ID '[' NUM ']'
   13       | ID '[' NUM ']' '[' NUM ']'
   14       | MUL ID

   15 main: BEG Slist END ';'
   16     | BEG END

   17 Slist: Slist Stmt
   18      | Stmt

   19 Stmt: READ '(' id ')' ';'
   20     | WRITE '(' Arth ')' ';'
   21     | WRITE STRING ';'
   22     | id EQ Arth ';'
   23     | IF '(' Bool ')' THEN Slist ELSE Slist ENDIF ';'
   24     | IF '(' Bool ')' THEN Slist ENDIF ';'
   25     | WHILE '(' Bool ')' DO Slist ENDWHILE ';'

   26 Arth: Arth PLUS Arth
   27     | Arth MINUS Arth
   28     | Arth MUL Arth
   29     | Arth DIV Arth
   30     | Arth MOD Arth
   31     | '(' Arth ')'
   32     | NUM
   33     | STRING
   34     | id

   35 Bool: Arth LT Arth
   36     | Arth LE Arth
   37     | Arth GT Arth
   38     | Arth GE Arth
   39     | Arth EE Arth
   40     | Arth NE Arth

   41 id: ID
   42   | ID '[' NUM ']'
   43   | ID '[' NUM ']' '[' NUM ']'
   44   | MUL ID
   45   | '&' ID


Terminals, with rules where they appear

$end (0) 0
'&' (38) 45
'(' (40) 19 20 23 24 25 31
')' (41) 19 20 23 24 25 31
',' (44) 9
';' (59) 2 3 6 15 19 20 21 22 23 24 25
'[' (91) 12 13 42 43
']' (93) 12 13 42 43
error (256)
NUM (258) 12 13 32 42 43
ID (259) 11 12 13 14 41 42 43 44 45
STRING (260) 21 33
PLUS (261) 26
MINUS (262) 27
MUL (263) 14 28 44
DIV (264) 29
MOD (265) 30
EQ (266) 22
INC (267)
DEC (268)
BEG (269) 15 16
END (270) 15 16
READ (271) 19
WRITE (272) 20 21
IF (273) 23 24
THEN (274) 23 24
ELSE (275) 23
ENDIF (276) 23 24
WHILE (277) 25
DO (278) 25
ENDWHILE (279) 25
BREAK (280)
CONTINUE (281)
REPEAT (282)
UNTIL (283)
DECL (284) 2 3
ENDDECL (285) 2 3
INT (286) 7
STR (287) 8
LT (288) 35
LE (289) 36
GT (290) 37
GE (291) 38
EE (292) 39
NE (293) 40


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
start (47)
    on left: 1, on right: 0
Declarations (48)
    on left: 2 3, on right: 1
DeclList (49)
    on left: 4 5, on right: 2 4
Decl (50)
    on left: 6, on right: 4 5
Type (51)
    on left: 7 8, on right: 6
Varlist (52)
    on left: 9 10, on right: 6 9
declid (53)
    on left: 11 12 13 14, on right: 9 10
main (54)
    on left: 15 16, on right: 1
Slist (55)
    on left: 17 18, on right: 15 17 23 24 25
Stmt (56)
    on left: 19 20 21 22 23 24 25, on right: 17 18
Arth (57)
    on left: 26 27 28 29 30 31 32 33 34, on right: 20 22 26 27 28 29
    30 31 35 36 37 38 39 40
Bool (58)
    on left: 35 36 37 38 39 40, on right: 23 24 25
id (59)
    on left: 41 42 43 44 45, on right: 19 22 34


State 0

    0 $accept: . start $end

    DECL  shift, and go to state 1

    start         go to state 2
    Declarations  go to state 3


State 1

    2 Declarations: DECL . DeclList ENDDECL ';'
    3             | DECL . ENDDECL ';'

    ENDDECL  shift, and go to state 4
    INT      shift, and go to state 5
    STR      shift, and go to state 6

    DeclList  go to state 7
    Decl      go to state 8
    Type      go to state 9


State 2

    0 $accept: start . $end

    $end  shift, and go to state 10


State 3

    1 start: Declarations . main

    BEG  shift, and go to state 11

    main  go to state 12


State 4

    3 Declarations: DECL ENDDECL . ';'

    ';'  shift, and go to state 13


State 5

    7 Type: INT .

    $default  reduce using rule 7 (Type)


State 6

    8 Type: STR .

    $default  reduce using rule 8 (Type)


State 7

    2 Declarations: DECL DeclList . ENDDECL ';'
    4 DeclList: DeclList . Decl

    ENDDECL  shift, and go to state 14
    INT      shift, and go to state 5
    STR      shift, and go to state 6

    Decl  go to state 15
    Type  go to state 9


State 8

    5 DeclList: Decl .

    $default  reduce using rule 5 (DeclList)


State 9

    6 Decl: Type . Varlist ';'

    ID   shift, and go to state 16
    MUL  shift, and go to state 17

    Varlist  go to state 18
    declid   go to state 19


State 10

    0 $accept: start $end .

    $default  accept


State 11

   15 main: BEG . Slist END ';'
   16     | BEG . END

    ID     shift, and go to state 20
    MUL    shift, and go to state 21
    END    shift, and go to state 22
    READ   shift, and go to state 23
    WRITE  shift, and go to state 24
    IF     shift, and go to state 25
    WHILE  shift, and go to state 26
    '&'    shift, and go to state 27

    Slist  go to state 28
    Stmt   go to state 29
    id     go to state 30


State 12

    1 start: Declarations main .

    $default  reduce using rule 1 (start)


State 13

    3 Declarations: DECL ENDDECL ';' .

    $default  reduce using rule 3 (Declarations)


State 14

    2 Declarations: DECL DeclList ENDDECL . ';'

    ';'  shift, and go to state 31


State 15

    4 DeclList: DeclList Decl .

    $default  reduce using rule 4 (DeclList)


State 16

   11 declid: ID .
   12       | ID . '[' NUM ']'
   13       | ID . '[' NUM ']' '[' NUM ']'

    '['  shift, and go to state 32

    $default  reduce using rule 11 (declid)


State 17

   14 declid: MUL . ID

    ID  shift, and go to state 33


State 18

    6 Decl: Type Varlist . ';'
    9 Varlist: Varlist . ',' declid

    ';'  shift, and go to state 34
    ','  shift, and go to state 35


State 19

   10 Varlist: declid .

    $default  reduce using rule 10 (Varlist)


State 20

   41 id: ID .
   42   | ID . '[' NUM ']'
   43   | ID . '[' NUM ']' '[' NUM ']'

    '['  shift, and go to state 36

    $default  reduce using rule 41 (id)


State 21

   44 id: MUL . ID

    ID  shift, and go to state 37


State 22

   16 main: BEG END .

    $default  reduce using rule 16 (main)


State 23

   19 Stmt: READ . '(' id ')' ';'

    '('  shift, and go to state 38


State 24

   20 Stmt: WRITE . '(' Arth ')' ';'
   21     | WRITE . STRING ';'

    STRING  shift, and go to state 39
    '('     shift, and go to state 40


State 25

   23 Stmt: IF . '(' Bool ')' THEN Slist ELSE Slist ENDIF ';'
   24     | IF . '(' Bool ')' THEN Slist ENDIF ';'

    '('  shift, and go to state 41


State 26

   25 Stmt: WHILE . '(' Bool ')' DO Slist ENDWHILE ';'

    '('  shift, and go to state 42


State 27

   45 id: '&' . ID

    ID  shift, and go to state 43


State 28

   15 main: BEG Slist . END ';'
   17 Slist: Slist . Stmt

    ID     shift, and go to state 20
    MUL    shift, and go to state 21
    END    shift, and go to state 44
    READ   shift, and go to state 23
    WRITE  shift, and go to state 24
    IF     shift, and go to state 25
    WHILE  shift, and go to state 26
    '&'    shift, and go to state 27

    Stmt  go to state 45
    id    go to state 30


State 29

   18 Slist: Stmt .

    $default  reduce using rule 18 (Slist)


State 30

   22 Stmt: id . EQ Arth ';'

    EQ  shift, and go to state 46


State 31

    2 Declarations: DECL DeclList ENDDECL ';' .

    $default  reduce using rule 2 (Declarations)


State 32

   12 declid: ID '[' . NUM ']'
   13       | ID '[' . NUM ']' '[' NUM ']'

    NUM  shift, and go to state 47


State 33

   14 declid: MUL ID .

    $default  reduce using rule 14 (declid)


State 34

    6 Decl: Type Varlist ';' .

    $default  reduce using rule 6 (Decl)


State 35

    9 Varlist: Varlist ',' . declid

    ID   shift, and go to state 16
    MUL  shift, and go to state 17

    declid  go to state 48


State 36

   42 id: ID '[' . NUM ']'
   43   | ID '[' . NUM ']' '[' NUM ']'

    NUM  shift, and go to state 49


State 37

   44 id: MUL ID .

    $default  reduce using rule 44 (id)


State 38

   19 Stmt: READ '(' . id ')' ';'

    ID   shift, and go to state 20
    MUL  shift, and go to state 21
    '&'  shift, and go to state 27

    id  go to state 50


State 39

   21 Stmt: WRITE STRING . ';'

    ';'  shift, and go to state 51


State 40

   20 Stmt: WRITE '(' . Arth ')' ';'

    NUM     shift, and go to state 52
    ID      shift, and go to state 20
    STRING  shift, and go to state 53
    MUL     shift, and go to state 21
    '('     shift, and go to state 54
    '&'     shift, and go to state 27

    Arth  go to state 55
    id    go to state 56


State 41

   23 Stmt: IF '(' . Bool ')' THEN Slist ELSE Slist ENDIF ';'
   24     | IF '(' . Bool ')' THEN Slist ENDIF ';'

    NUM     shift, and go to state 52
    ID      shift, and go to state 20
    STRING  shift, and go to state 53
    MUL     shift, and go to state 21
    '('     shift, and go to state 54
    '&'     shift, and go to state 27

    Arth  go to state 57
    Bool  go to state 58
    id    go to state 56


State 42

   25 Stmt: WHILE '(' . Bool ')' DO Slist ENDWHILE ';'

    NUM     shift, and go to state 52
    ID      shift, and go to state 20
    STRING  shift, and go to state 53
    MUL     shift, and go to state 21
    '('     shift, and go to state 54
    '&'     shift, and go to state 27

    Arth  go to state 57
    Bool  go to state 59
    id    go to state 56


State 43

   45 id: '&' ID .

    $default  reduce using rule 45 (id)


State 44

   15 main: BEG Slist END . ';'

    ';'  shift, and go to state 60


State 45

   17 Slist: Slist Stmt .

    $default  reduce using rule 17 (Slist)


State 46

   22 Stmt: id EQ . Arth ';'

    NUM     shift, and go to state 52
    ID      shift, and go to state 20
    STRING  shift, and go to state 53
    MUL     shift, and go to state 21
    '('     shift, and go to state 54
    '&'     shift, and go to state 27

    Arth  go to state 61
    id    go to state 56


State 47

   12 declid: ID '[' NUM . ']'
   13       | ID '[' NUM . ']' '[' NUM ']'

    ']'  shift, and go to state 62


State 48

    9 Varlist: Varlist ',' declid .

    $default  reduce using rule 9 (Varlist)


State 49

   42 id: ID '[' NUM . ']'
   43   | ID '[' NUM . ']' '[' NUM ']'

    ']'  shift, and go to state 63


State 50

   19 Stmt: READ '(' id . ')' ';'

    ')'  shift, and go to state 64


State 51

   21 Stmt: WRITE STRING ';' .

    $default  reduce using rule 21 (Stmt)


State 52

   32 Arth: NUM .

    $default  reduce using rule 32 (Arth)


State 53

   33 Arth: STRING .

    $default  reduce using rule 33 (Arth)


State 54

   31 Arth: '(' . Arth ')'

    NUM     shift, and go to state 52
    ID      shift, and go to state 20
    STRING  shift, and go to state 53
    MUL     shift, and go to state 21
    '('     shift, and go to state 54
    '&'     shift, and go to state 27

    Arth  go to state 65
    id    go to state 56


State 55

   20 Stmt: WRITE '(' Arth . ')' ';'
   26 Arth: Arth . PLUS Arth
   27     | Arth . MINUS Arth
   28     | Arth . MUL Arth
   29     | Arth . DIV Arth
   30     | Arth . MOD Arth

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67
    MUL    shift, and go to state 68
    DIV    shift, and go to state 69
    MOD    shift, and go to state 70
    ')'    shift, and go to state 71


State 56

   34 Arth: id .

    $default  reduce using rule 34 (Arth)


State 57

   26 Arth: Arth . PLUS Arth
   27     | Arth . MINUS Arth
   28     | Arth . MUL Arth
   29     | Arth . DIV Arth
   30     | Arth . MOD Arth
   35 Bool: Arth . LT Arth
   36     | Arth . LE Arth
   37     | Arth . GT Arth
   38     | Arth . GE Arth
   39     | Arth . EE Arth
   40     | Arth . NE Arth

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67
    MUL    shift, and go to state 68
    DIV    shift, and go to state 69
    MOD    shift, and go to state 70
    LT     shift, and go to state 72
    LE     shift, and go to state 73
    GT     shift, and go to state 74
    GE     shift, and go to state 75
    EE     shift, and go to state 76
    NE     shift, and go to state 77


State 58

   23 Stmt: IF '(' Bool . ')' THEN Slist ELSE Slist ENDIF ';'
   24     | IF '(' Bool . ')' THEN Slist ENDIF ';'

    ')'  shift, and go to state 78


State 59

   25 Stmt: WHILE '(' Bool . ')' DO Slist ENDWHILE ';'

    ')'  shift, and go to state 79


State 60

   15 main: BEG Slist END ';' .

    $default  reduce using rule 15 (main)


State 61

   22 Stmt: id EQ Arth . ';'
   26 Arth: Arth . PLUS Arth
   27     | Arth . MINUS Arth
   28     | Arth . MUL Arth
   29     | Arth . DIV Arth
   30     | Arth . MOD Arth

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67
    MUL    shift, and go to state 68
    DIV    shift, and go to state 69
    MOD    shift, and go to state 70
    ';'    shift, and go to state 80


State 62

   12 declid: ID '[' NUM ']' .
   13       | ID '[' NUM ']' . '[' NUM ']'

    '['  shift, and go to state 81

    $default  reduce using rule 12 (declid)


State 63

   42 id: ID '[' NUM ']' .
   43   | ID '[' NUM ']' . '[' NUM ']'

    '['  shift, and go to state 82

    $default  reduce using rule 42 (id)


State 64

   19 Stmt: READ '(' id ')' . ';'

    ';'  shift, and go to state 83


State 65

   26 Arth: Arth . PLUS Arth
   27     | Arth . MINUS Arth
   28     | Arth . MUL Arth
   29     | Arth . DIV Arth
   30     | Arth . MOD Arth
   31     | '(' Arth . ')'

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67
    MUL    shift, and go to state 68
    DIV    shift, and go to state 69
    MOD    shift, and go to state 70
    ')'    shift, and go to state 84


State 66

   26 Arth: Arth PLUS . Arth

    NUM     shift, and go to state 52
    ID      shift, and go to state 20
    STRING  shift, and go to state 53
    MUL     shift, and go to state 21
    '('     shift, and go to state 54
    '&'     shift, and go to state 27

    Arth  go to state 85
    id    go to state 56


State 67

   27 Arth: Arth MINUS . Arth

    NUM     shift, and go to state 52
    ID      shift, and go to state 20
    STRING  shift, and go to state 53
    MUL     shift, and go to state 21
    '('     shift, and go to state 54
    '&'     shift, and go to state 27

    Arth  go to state 86
    id    go to state 56


State 68

   28 Arth: Arth MUL . Arth

    NUM     shift, and go to state 52
    ID      shift, and go to state 20
    STRING  shift, and go to state 53
    MUL     shift, and go to state 21
    '('     shift, and go to state 54
    '&'     shift, and go to state 27

    Arth  go to state 87
    id    go to state 56


State 69

   29 Arth: Arth DIV . Arth

    NUM     shift, and go to state 52
    ID      shift, and go to state 20
    STRING  shift, and go to state 53
    MUL     shift, and go to state 21
    '('     shift, and go to state 54
    '&'     shift, and go to state 27

    Arth  go to state 88
    id    go to state 56


State 70

   30 Arth: Arth MOD . Arth

    NUM     shift, and go to state 52
    ID      shift, and go to state 20
    STRING  shift, and go to state 53
    MUL     shift, and go to state 21
    '('     shift, and go to state 54
    '&'     shift, and go to state 27

    Arth  go to state 89
    id    go to state 56


State 71

   20 Stmt: WRITE '(' Arth ')' . ';'

    ';'  shift, and go to state 90


State 72

   35 Bool: Arth LT . Arth

    NUM     shift, and go to state 52
    ID      shift, and go to state 20
    STRING  shift, and go to state 53
    MUL     shift, and go to state 21
    '('     shift, and go to state 54
    '&'     shift, and go to state 27

    Arth  go to state 91
    id    go to state 56


State 73

   36 Bool: Arth LE . Arth

    NUM     shift, and go to state 52
    ID      shift, and go to state 20
    STRING  shift, and go to state 53
    MUL     shift, and go to state 21
    '('     shift, and go to state 54
    '&'     shift, and go to state 27

    Arth  go to state 92
    id    go to state 56


State 74

   37 Bool: Arth GT . Arth

    NUM     shift, and go to state 52
    ID      shift, and go to state 20
    STRING  shift, and go to state 53
    MUL     shift, and go to state 21
    '('     shift, and go to state 54
    '&'     shift, and go to state 27

    Arth  go to state 93
    id    go to state 56


State 75

   38 Bool: Arth GE . Arth

    NUM     shift, and go to state 52
    ID      shift, and go to state 20
    STRING  shift, and go to state 53
    MUL     shift, and go to state 21
    '('     shift, and go to state 54
    '&'     shift, and go to state 27

    Arth  go to state 94
    id    go to state 56


State 76

   39 Bool: Arth EE . Arth

    NUM     shift, and go to state 52
    ID      shift, and go to state 20
    STRING  shift, and go to state 53
    MUL     shift, and go to state 21
    '('     shift, and go to state 54
    '&'     shift, and go to state 27

    Arth  go to state 95
    id    go to state 56


State 77

   40 Bool: Arth NE . Arth

    NUM     shift, and go to state 52
    ID      shift, and go to state 20
    STRING  shift, and go to state 53
    MUL     shift, and go to state 21
    '('     shift, and go to state 54
    '&'     shift, and go to state 27

    Arth  go to state 96
    id    go to state 56


State 78

   23 Stmt: IF '(' Bool ')' . THEN Slist ELSE Slist ENDIF ';'
   24     | IF '(' Bool ')' . THEN Slist ENDIF ';'

    THEN  shift, and go to state 97


State 79

   25 Stmt: WHILE '(' Bool ')' . DO Slist ENDWHILE ';'

    DO  shift, and go to state 98


State 80

   22 Stmt: id EQ Arth ';' .

    $default  reduce using rule 22 (Stmt)


State 81

   13 declid: ID '[' NUM ']' '[' . NUM ']'

    NUM  shift, and go to state 99


State 82

   43 id: ID '[' NUM ']' '[' . NUM ']'

    NUM  shift, and go to state 100


State 83

   19 Stmt: READ '(' id ')' ';' .

    $default  reduce using rule 19 (Stmt)


State 84

   31 Arth: '(' Arth ')' .

    $default  reduce using rule 31 (Arth)


State 85

   26 Arth: Arth . PLUS Arth
   26     | Arth PLUS Arth .
   27     | Arth . MINUS Arth
   28     | Arth . MUL Arth
   29     | Arth . DIV Arth
   30     | Arth . MOD Arth

    MUL  shift, and go to state 68
    DIV  shift, and go to state 69
    MOD  shift, and go to state 70

    MOD       [reduce using rule 26 (Arth)]
    $default  reduce using rule 26 (Arth)


State 86

   26 Arth: Arth . PLUS Arth
   27     | Arth . MINUS Arth
   27     | Arth MINUS Arth .
   28     | Arth . MUL Arth
   29     | Arth . DIV Arth
   30     | Arth . MOD Arth

    MUL  shift, and go to state 68
    DIV  shift, and go to state 69
    MOD  shift, and go to state 70

    MOD       [reduce using rule 27 (Arth)]
    $default  reduce using rule 27 (Arth)


State 87

   26 Arth: Arth . PLUS Arth
   27     | Arth . MINUS Arth
   28     | Arth . MUL Arth
   28     | Arth MUL Arth .
   29     | Arth . DIV Arth
   30     | Arth . MOD Arth

    MOD  shift, and go to state 70

    MOD       [reduce using rule 28 (Arth)]
    $default  reduce using rule 28 (Arth)


State 88

   26 Arth: Arth . PLUS Arth
   27     | Arth . MINUS Arth
   28     | Arth . MUL Arth
   29     | Arth . DIV Arth
   29     | Arth DIV Arth .
   30     | Arth . MOD Arth

    MOD  shift, and go to state 70

    MOD       [reduce using rule 29 (Arth)]
    $default  reduce using rule 29 (Arth)


State 89

   26 Arth: Arth . PLUS Arth
   27     | Arth . MINUS Arth
   28     | Arth . MUL Arth
   29     | Arth . DIV Arth
   30     | Arth . MOD Arth
   30     | Arth MOD Arth .

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67
    MUL    shift, and go to state 68
    DIV    shift, and go to state 69
    MOD    shift, and go to state 70

    PLUS      [reduce using rule 30 (Arth)]
    MINUS     [reduce using rule 30 (Arth)]
    MUL       [reduce using rule 30 (Arth)]
    DIV       [reduce using rule 30 (Arth)]
    MOD       [reduce using rule 30 (Arth)]
    $default  reduce using rule 30 (Arth)


State 90

   20 Stmt: WRITE '(' Arth ')' ';' .

    $default  reduce using rule 20 (Stmt)


State 91

   26 Arth: Arth . PLUS Arth
   27     | Arth . MINUS Arth
   28     | Arth . MUL Arth
   29     | Arth . DIV Arth
   30     | Arth . MOD Arth
   35 Bool: Arth LT Arth .

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67
    MUL    shift, and go to state 68
    DIV    shift, and go to state 69
    MOD    shift, and go to state 70

    $default  reduce using rule 35 (Bool)


State 92

   26 Arth: Arth . PLUS Arth
   27     | Arth . MINUS Arth
   28     | Arth . MUL Arth
   29     | Arth . DIV Arth
   30     | Arth . MOD Arth
   36 Bool: Arth LE Arth .

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67
    MUL    shift, and go to state 68
    DIV    shift, and go to state 69
    MOD    shift, and go to state 70

    $default  reduce using rule 36 (Bool)


State 93

   26 Arth: Arth . PLUS Arth
   27     | Arth . MINUS Arth
   28     | Arth . MUL Arth
   29     | Arth . DIV Arth
   30     | Arth . MOD Arth
   37 Bool: Arth GT Arth .

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67
    MUL    shift, and go to state 68
    DIV    shift, and go to state 69
    MOD    shift, and go to state 70

    $default  reduce using rule 37 (Bool)


State 94

   26 Arth: Arth . PLUS Arth
   27     | Arth . MINUS Arth
   28     | Arth . MUL Arth
   29     | Arth . DIV Arth
   30     | Arth . MOD Arth
   38 Bool: Arth GE Arth .

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67
    MUL    shift, and go to state 68
    DIV    shift, and go to state 69
    MOD    shift, and go to state 70

    $default  reduce using rule 38 (Bool)


State 95

   26 Arth: Arth . PLUS Arth
   27     | Arth . MINUS Arth
   28     | Arth . MUL Arth
   29     | Arth . DIV Arth
   30     | Arth . MOD Arth
   39 Bool: Arth EE Arth .

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67
    MUL    shift, and go to state 68
    DIV    shift, and go to state 69
    MOD    shift, and go to state 70

    $default  reduce using rule 39 (Bool)


State 96

   26 Arth: Arth . PLUS Arth
   27     | Arth . MINUS Arth
   28     | Arth . MUL Arth
   29     | Arth . DIV Arth
   30     | Arth . MOD Arth
   40 Bool: Arth NE Arth .

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67
    MUL    shift, and go to state 68
    DIV    shift, and go to state 69
    MOD    shift, and go to state 70

    $default  reduce using rule 40 (Bool)


State 97

   23 Stmt: IF '(' Bool ')' THEN . Slist ELSE Slist ENDIF ';'
   24     | IF '(' Bool ')' THEN . Slist ENDIF ';'

    ID     shift, and go to state 20
    MUL    shift, and go to state 21
    READ   shift, and go to state 23
    WRITE  shift, and go to state 24
    IF     shift, and go to state 25
    WHILE  shift, and go to state 26
    '&'    shift, and go to state 27

    Slist  go to state 101
    Stmt   go to state 29
    id     go to state 30


State 98

   25 Stmt: WHILE '(' Bool ')' DO . Slist ENDWHILE ';'

    ID     shift, and go to state 20
    MUL    shift, and go to state 21
    READ   shift, and go to state 23
    WRITE  shift, and go to state 24
    IF     shift, and go to state 25
    WHILE  shift, and go to state 26
    '&'    shift, and go to state 27

    Slist  go to state 102
    Stmt   go to state 29
    id     go to state 30


State 99

   13 declid: ID '[' NUM ']' '[' NUM . ']'

    ']'  shift, and go to state 103


State 100

   43 id: ID '[' NUM ']' '[' NUM . ']'

    ']'  shift, and go to state 104


State 101

   17 Slist: Slist . Stmt
   23 Stmt: IF '(' Bool ')' THEN Slist . ELSE Slist ENDIF ';'
   24     | IF '(' Bool ')' THEN Slist . ENDIF ';'

    ID     shift, and go to state 20
    MUL    shift, and go to state 21
    READ   shift, and go to state 23
    WRITE  shift, and go to state 24
    IF     shift, and go to state 25
    ELSE   shift, and go to state 105
    ENDIF  shift, and go to state 106
    WHILE  shift, and go to state 26
    '&'    shift, and go to state 27

    Stmt  go to state 45
    id    go to state 30


State 102

   17 Slist: Slist . Stmt
   25 Stmt: WHILE '(' Bool ')' DO Slist . ENDWHILE ';'

    ID        shift, and go to state 20
    MUL       shift, and go to state 21
    READ      shift, and go to state 23
    WRITE     shift, and go to state 24
    IF        shift, and go to state 25
    WHILE     shift, and go to state 26
    ENDWHILE  shift, and go to state 107
    '&'       shift, and go to state 27

    Stmt  go to state 45
    id    go to state 30


State 103

   13 declid: ID '[' NUM ']' '[' NUM ']' .

    $default  reduce using rule 13 (declid)


State 104

   43 id: ID '[' NUM ']' '[' NUM ']' .

    $default  reduce using rule 43 (id)


State 105

   23 Stmt: IF '(' Bool ')' THEN Slist ELSE . Slist ENDIF ';'

    ID     shift, and go to state 20
    MUL    shift, and go to state 21
    READ   shift, and go to state 23
    WRITE  shift, and go to state 24
    IF     shift, and go to state 25
    WHILE  shift, and go to state 26
    '&'    shift, and go to state 27

    Slist  go to state 108
    Stmt   go to state 29
    id     go to state 30


State 106

   24 Stmt: IF '(' Bool ')' THEN Slist ENDIF . ';'

    ';'  shift, and go to state 109


State 107

   25 Stmt: WHILE '(' Bool ')' DO Slist ENDWHILE . ';'

    ';'  shift, and go to state 110


State 108

   17 Slist: Slist . Stmt
   23 Stmt: IF '(' Bool ')' THEN Slist ELSE Slist . ENDIF ';'

    ID     shift, and go to state 20
    MUL    shift, and go to state 21
    READ   shift, and go to state 23
    WRITE  shift, and go to state 24
    IF     shift, and go to state 25
    ENDIF  shift, and go to state 111
    WHILE  shift, and go to state 26
    '&'    shift, and go to state 27

    Stmt  go to state 45
    id    go to state 30


State 109

   24 Stmt: IF '(' Bool ')' THEN Slist ENDIF ';' .

    $default  reduce using rule 24 (Stmt)


State 110

   25 Stmt: WHILE '(' Bool ')' DO Slist ENDWHILE ';' .

    $default  reduce using rule 25 (Stmt)


State 111

   23 Stmt: IF '(' Bool ')' THEN Slist ELSE Slist ENDIF . ';'

    ';'  shift, and go to state 112


State 112

   23 Stmt: IF '(' Bool ')' THEN Slist ELSE Slist ENDIF ';' .

    $default  reduce using rule 23 (Stmt)
